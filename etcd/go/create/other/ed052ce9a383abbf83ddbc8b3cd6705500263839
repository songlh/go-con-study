commit ed052ce9a383abbf83ddbc8b3cd6705500263839
Author: fanmin shi <fanmin.shi@coreos.com>
Date:   Fri Jul 14 16:41:23 2017 -0700

    proto: add HashKV grpc
    
    HashKV rpc hash of all MVCC keys up to a given revision for a given node.

diff --git a/etcdserver/etcdserverpb/etcdserver.pb.go b/etcdserver/etcdserverpb/etcdserver.pb.go
index febf62c..b0d00e2 100644
--- a/etcdserver/etcdserverpb/etcdserver.pb.go
+++ b/etcdserver/etcdserverpb/etcdserver.pb.go
@@ -32,6 +32,8 @@
 		CompactionRequest
 		CompactionResponse
 		HashRequest
+		HashKVRequest
+		HashKVResponse
 		HashResponse
 		SnapshotRequest
 		SnapshotResponse
diff --git a/etcdserver/etcdserverpb/gw/rpc.pb.gw.go b/etcdserver/etcdserverpb/gw/rpc.pb.gw.go
index 2421181..190eff5 100644
--- a/etcdserver/etcdserverpb/gw/rpc.pb.gw.go
+++ b/etcdserver/etcdserverpb/gw/rpc.pb.gw.go
@@ -340,6 +340,19 @@ func request_Maintenance_Hash_0(ctx context.Context, marshaler runtime.Marshaler
 
 }
 
+func request_Maintenance_HashKV_0(ctx context.Context, marshaler runtime.Marshaler, client etcdserverpb.MaintenanceClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
+	var protoReq etcdserverpb.HashKVRequest
+	var metadata runtime.ServerMetadata
+
+	if err := marshaler.NewDecoder(req.Body).Decode(&protoReq); err != nil {
+		return nil, metadata, grpc.Errorf(codes.InvalidArgument, "%v", err)
+	}
+
+	msg, err := client.HashKV(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
+	return msg, metadata, err
+
+}
+
 func request_Maintenance_Snapshot_0(ctx context.Context, marshaler runtime.Marshaler, client etcdserverpb.MaintenanceClient, req *http.Request, pathParams map[string]string) (etcdserverpb.Maintenance_SnapshotClient, runtime.ServerMetadata, error) {
 	var protoReq etcdserverpb.SnapshotRequest
 	var metadata runtime.ServerMetadata
@@ -1320,6 +1333,34 @@ func RegisterMaintenanceHandler(ctx context.Context, mux *runtime.ServeMux, conn
 
 	})
 
+	mux.Handle("POST", pattern_Maintenance_HashKV_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
+		ctx, cancel := context.WithCancel(ctx)
+		defer cancel()
+		if cn, ok := w.(http.CloseNotifier); ok {
+			go func(done <-chan struct{}, closed <-chan bool) {
+				select {
+				case <-done:
+				case <-closed:
+					cancel()
+				}
+			}(ctx.Done(), cn.CloseNotify())
+		}
+		inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
+		rctx, err := runtime.AnnotateContext(ctx, req)
+		if err != nil {
+			runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
+		}
+		resp, md, err := request_Maintenance_HashKV_0(rctx, inboundMarshaler, client, req, pathParams)
+		ctx = runtime.NewServerMetadataContext(ctx, md)
+		if err != nil {
+			runtime.HTTPError(ctx, outboundMarshaler, w, req, err)
+			return
+		}
+
+		forward_Maintenance_HashKV_0(ctx, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)
+
+	})
+
 	mux.Handle("POST", pattern_Maintenance_Snapshot_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
 		ctx, cancel := context.WithCancel(ctx)
 		defer cancel()
@@ -1388,6 +1429,8 @@ var (
 
 	pattern_Maintenance_Hash_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v3alpha", "maintenance", "hash"}, ""))
 
+	pattern_Maintenance_HashKV_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v3alpha", "maintenance", "hash"}, ""))
+
 	pattern_Maintenance_Snapshot_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v3alpha", "maintenance", "snapshot"}, ""))
 
 	pattern_Maintenance_MoveLeader_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{"v3alpha", "maintenance", "transfer-leadership"}, ""))
@@ -1402,6 +1445,8 @@ var (
 
 	forward_Maintenance_Hash_0 = runtime.ForwardResponseMessage
 
+	forward_Maintenance_HashKV_0 = runtime.ForwardResponseMessage
+
 	forward_Maintenance_Snapshot_0 = runtime.ForwardResponseStream
 
 	forward_Maintenance_MoveLeader_0 = runtime.ForwardResponseMessage
diff --git a/etcdserver/etcdserverpb/rpc.pb.go b/etcdserver/etcdserverpb/rpc.pb.go
index 1cef5dc..8bde0d0 100644
--- a/etcdserver/etcdserverpb/rpc.pb.go
+++ b/etcdserver/etcdserverpb/rpc.pb.go
@@ -178,7 +178,7 @@ func (x WatchCreateRequest_FilterType) String() string {
 	return proto.EnumName(WatchCreateRequest_FilterType_name, int32(x))
 }
 func (WatchCreateRequest_FilterType) EnumDescriptor() ([]byte, []int) {
-	return fileDescriptorRpc, []int{19, 0}
+	return fileDescriptorRpc, []int{21, 0}
 }
 
 type AlarmRequest_AlarmAction int32
@@ -204,7 +204,7 @@ func (x AlarmRequest_AlarmAction) String() string {
 	return proto.EnumName(AlarmRequest_AlarmAction_name, int32(x))
 }
 func (AlarmRequest_AlarmAction) EnumDescriptor() ([]byte, []int) {
-	return fileDescriptorRpc, []int{43, 0}
+	return fileDescriptorRpc, []int{45, 0}
 }
 
 type ResponseHeader struct {
@@ -1321,16 +1321,67 @@ func (m *HashRequest) String() string            { return proto.CompactTextStrin
 func (*HashRequest) ProtoMessage()               {}
 func (*HashRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{14} }
 
+type HashKVRequest struct {
+	// revision is the key-value store revision for the hash operation.
+	Revision int64 `protobuf:"varint,1,opt,name=revision,proto3" json:"revision,omitempty"`
+}
+
+func (m *HashKVRequest) Reset()                    { *m = HashKVRequest{} }
+func (m *HashKVRequest) String() string            { return proto.CompactTextString(m) }
+func (*HashKVRequest) ProtoMessage()               {}
+func (*HashKVRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{15} }
+
+func (m *HashKVRequest) GetRevision() int64 {
+	if m != nil {
+		return m.Revision
+	}
+	return 0
+}
+
+type HashKVResponse struct {
+	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
+	// hash is the hash value computed from the responding member's MVCC keys up to a given revision.
+	Hash uint32 `protobuf:"varint,2,opt,name=hash,proto3" json:"hash,omitempty"`
+	// compact_revision is the compacted revision of key-value store when hash begins.
+	CompactRevision int64 `protobuf:"varint,3,opt,name=compact_revision,json=compactRevision,proto3" json:"compact_revision,omitempty"`
+}
+
+func (m *HashKVResponse) Reset()                    { *m = HashKVResponse{} }
+func (m *HashKVResponse) String() string            { return proto.CompactTextString(m) }
+func (*HashKVResponse) ProtoMessage()               {}
+func (*HashKVResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{16} }
+
+func (m *HashKVResponse) GetHeader() *ResponseHeader {
+	if m != nil {
+		return m.Header
+	}
+	return nil
+}
+
+func (m *HashKVResponse) GetHash() uint32 {
+	if m != nil {
+		return m.Hash
+	}
+	return 0
+}
+
+func (m *HashKVResponse) GetCompactRevision() int64 {
+	if m != nil {
+		return m.CompactRevision
+	}
+	return 0
+}
+
 type HashResponse struct {
 	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
-	// hash is the hash value computed from the responding member's key-value store.
+	// hash is the hash value computed from the responding member's KV's backend.
 	Hash uint32 `protobuf:"varint,2,opt,name=hash,proto3" json:"hash,omitempty"`
 }
 
 func (m *HashResponse) Reset()                    { *m = HashResponse{} }
 func (m *HashResponse) String() string            { return proto.CompactTextString(m) }
 func (*HashResponse) ProtoMessage()               {}
-func (*HashResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{15} }
+func (*HashResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{17} }
 
 func (m *HashResponse) GetHeader() *ResponseHeader {
 	if m != nil {
@@ -1352,7 +1403,7 @@ type SnapshotRequest struct {
 func (m *SnapshotRequest) Reset()                    { *m = SnapshotRequest{} }
 func (m *SnapshotRequest) String() string            { return proto.CompactTextString(m) }
 func (*SnapshotRequest) ProtoMessage()               {}
-func (*SnapshotRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{16} }
+func (*SnapshotRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{18} }
 
 type SnapshotResponse struct {
 	// header has the current key-value store information. The first header in the snapshot
@@ -1367,7 +1418,7 @@ type SnapshotResponse struct {
 func (m *SnapshotResponse) Reset()                    { *m = SnapshotResponse{} }
 func (m *SnapshotResponse) String() string            { return proto.CompactTextString(m) }
 func (*SnapshotResponse) ProtoMessage()               {}
-func (*SnapshotResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{17} }
+func (*SnapshotResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{19} }
 
 func (m *SnapshotResponse) GetHeader() *ResponseHeader {
 	if m != nil {
@@ -1402,7 +1453,7 @@ type WatchRequest struct {
 func (m *WatchRequest) Reset()                    { *m = WatchRequest{} }
 func (m *WatchRequest) String() string            { return proto.CompactTextString(m) }
 func (*WatchRequest) ProtoMessage()               {}
-func (*WatchRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{18} }
+func (*WatchRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{20} }
 
 type isWatchRequest_RequestUnion interface {
 	isWatchRequest_RequestUnion()
@@ -1541,7 +1592,7 @@ type WatchCreateRequest struct {
 func (m *WatchCreateRequest) Reset()                    { *m = WatchCreateRequest{} }
 func (m *WatchCreateRequest) String() string            { return proto.CompactTextString(m) }
 func (*WatchCreateRequest) ProtoMessage()               {}
-func (*WatchCreateRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{19} }
+func (*WatchCreateRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{21} }
 
 func (m *WatchCreateRequest) GetKey() []byte {
 	if m != nil {
@@ -1593,7 +1644,7 @@ type WatchCancelRequest struct {
 func (m *WatchCancelRequest) Reset()                    { *m = WatchCancelRequest{} }
 func (m *WatchCancelRequest) String() string            { return proto.CompactTextString(m) }
 func (*WatchCancelRequest) ProtoMessage()               {}
-func (*WatchCancelRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{20} }
+func (*WatchCancelRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{22} }
 
 func (m *WatchCancelRequest) GetWatchId() int64 {
 	if m != nil {
@@ -1631,7 +1682,7 @@ type WatchResponse struct {
 func (m *WatchResponse) Reset()                    { *m = WatchResponse{} }
 func (m *WatchResponse) String() string            { return proto.CompactTextString(m) }
 func (*WatchResponse) ProtoMessage()               {}
-func (*WatchResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{21} }
+func (*WatchResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{23} }
 
 func (m *WatchResponse) GetHeader() *ResponseHeader {
 	if m != nil {
@@ -1692,7 +1743,7 @@ type LeaseGrantRequest struct {
 func (m *LeaseGrantRequest) Reset()                    { *m = LeaseGrantRequest{} }
 func (m *LeaseGrantRequest) String() string            { return proto.CompactTextString(m) }
 func (*LeaseGrantRequest) ProtoMessage()               {}
-func (*LeaseGrantRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{22} }
+func (*LeaseGrantRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{24} }
 
 func (m *LeaseGrantRequest) GetTTL() int64 {
 	if m != nil {
@@ -1720,7 +1771,7 @@ type LeaseGrantResponse struct {
 func (m *LeaseGrantResponse) Reset()                    { *m = LeaseGrantResponse{} }
 func (m *LeaseGrantResponse) String() string            { return proto.CompactTextString(m) }
 func (*LeaseGrantResponse) ProtoMessage()               {}
-func (*LeaseGrantResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{23} }
+func (*LeaseGrantResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{25} }
 
 func (m *LeaseGrantResponse) GetHeader() *ResponseHeader {
 	if m != nil {
@@ -1758,7 +1809,7 @@ type LeaseRevokeRequest struct {
 func (m *LeaseRevokeRequest) Reset()                    { *m = LeaseRevokeRequest{} }
 func (m *LeaseRevokeRequest) String() string            { return proto.CompactTextString(m) }
 func (*LeaseRevokeRequest) ProtoMessage()               {}
-func (*LeaseRevokeRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{24} }
+func (*LeaseRevokeRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{26} }
 
 func (m *LeaseRevokeRequest) GetID() int64 {
 	if m != nil {
@@ -1774,7 +1825,7 @@ type LeaseRevokeResponse struct {
 func (m *LeaseRevokeResponse) Reset()                    { *m = LeaseRevokeResponse{} }
 func (m *LeaseRevokeResponse) String() string            { return proto.CompactTextString(m) }
 func (*LeaseRevokeResponse) ProtoMessage()               {}
-func (*LeaseRevokeResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{25} }
+func (*LeaseRevokeResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{27} }
 
 func (m *LeaseRevokeResponse) GetHeader() *ResponseHeader {
 	if m != nil {
@@ -1791,7 +1842,7 @@ type LeaseKeepAliveRequest struct {
 func (m *LeaseKeepAliveRequest) Reset()                    { *m = LeaseKeepAliveRequest{} }
 func (m *LeaseKeepAliveRequest) String() string            { return proto.CompactTextString(m) }
 func (*LeaseKeepAliveRequest) ProtoMessage()               {}
-func (*LeaseKeepAliveRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{26} }
+func (*LeaseKeepAliveRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{28} }
 
 func (m *LeaseKeepAliveRequest) GetID() int64 {
 	if m != nil {
@@ -1811,7 +1862,7 @@ type LeaseKeepAliveResponse struct {
 func (m *LeaseKeepAliveResponse) Reset()                    { *m = LeaseKeepAliveResponse{} }
 func (m *LeaseKeepAliveResponse) String() string            { return proto.CompactTextString(m) }
 func (*LeaseKeepAliveResponse) ProtoMessage()               {}
-func (*LeaseKeepAliveResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{27} }
+func (*LeaseKeepAliveResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{29} }
 
 func (m *LeaseKeepAliveResponse) GetHeader() *ResponseHeader {
 	if m != nil {
@@ -1844,7 +1895,7 @@ type LeaseTimeToLiveRequest struct {
 func (m *LeaseTimeToLiveRequest) Reset()                    { *m = LeaseTimeToLiveRequest{} }
 func (m *LeaseTimeToLiveRequest) String() string            { return proto.CompactTextString(m) }
 func (*LeaseTimeToLiveRequest) ProtoMessage()               {}
-func (*LeaseTimeToLiveRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{28} }
+func (*LeaseTimeToLiveRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{30} }
 
 func (m *LeaseTimeToLiveRequest) GetID() int64 {
 	if m != nil {
@@ -1875,7 +1926,7 @@ type LeaseTimeToLiveResponse struct {
 func (m *LeaseTimeToLiveResponse) Reset()                    { *m = LeaseTimeToLiveResponse{} }
 func (m *LeaseTimeToLiveResponse) String() string            { return proto.CompactTextString(m) }
 func (*LeaseTimeToLiveResponse) ProtoMessage()               {}
-func (*LeaseTimeToLiveResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{29} }
+func (*LeaseTimeToLiveResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{31} }
 
 func (m *LeaseTimeToLiveResponse) GetHeader() *ResponseHeader {
 	if m != nil {
@@ -1926,7 +1977,7 @@ type Member struct {
 func (m *Member) Reset()                    { *m = Member{} }
 func (m *Member) String() string            { return proto.CompactTextString(m) }
 func (*Member) ProtoMessage()               {}
-func (*Member) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{30} }
+func (*Member) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{32} }
 
 func (m *Member) GetID() uint64 {
 	if m != nil {
@@ -1964,7 +2015,7 @@ type MemberAddRequest struct {
 func (m *MemberAddRequest) Reset()                    { *m = MemberAddRequest{} }
 func (m *MemberAddRequest) String() string            { return proto.CompactTextString(m) }
 func (*MemberAddRequest) ProtoMessage()               {}
-func (*MemberAddRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{31} }
+func (*MemberAddRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{33} }
 
 func (m *MemberAddRequest) GetPeerURLs() []string {
 	if m != nil {
@@ -1984,7 +2035,7 @@ type MemberAddResponse struct {
 func (m *MemberAddResponse) Reset()                    { *m = MemberAddResponse{} }
 func (m *MemberAddResponse) String() string            { return proto.CompactTextString(m) }
 func (*MemberAddResponse) ProtoMessage()               {}
-func (*MemberAddResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{32} }
+func (*MemberAddResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{34} }
 
 func (m *MemberAddResponse) GetHeader() *ResponseHeader {
 	if m != nil {
@@ -2015,7 +2066,7 @@ type MemberRemoveRequest struct {
 func (m *MemberRemoveRequest) Reset()                    { *m = MemberRemoveRequest{} }
 func (m *MemberRemoveRequest) String() string            { return proto.CompactTextString(m) }
 func (*MemberRemoveRequest) ProtoMessage()               {}
-func (*MemberRemoveRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{33} }
+func (*MemberRemoveRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{35} }
 
 func (m *MemberRemoveRequest) GetID() uint64 {
 	if m != nil {
@@ -2033,7 +2084,7 @@ type MemberRemoveResponse struct {
 func (m *MemberRemoveResponse) Reset()                    { *m = MemberRemoveResponse{} }
 func (m *MemberRemoveResponse) String() string            { return proto.CompactTextString(m) }
 func (*MemberRemoveResponse) ProtoMessage()               {}
-func (*MemberRemoveResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{34} }
+func (*MemberRemoveResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{36} }
 
 func (m *MemberRemoveResponse) GetHeader() *ResponseHeader {
 	if m != nil {
@@ -2059,7 +2110,7 @@ type MemberUpdateRequest struct {
 func (m *MemberUpdateRequest) Reset()                    { *m = MemberUpdateRequest{} }
 func (m *MemberUpdateRequest) String() string            { return proto.CompactTextString(m) }
 func (*MemberUpdateRequest) ProtoMessage()               {}
-func (*MemberUpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{35} }
+func (*MemberUpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{37} }
 
 func (m *MemberUpdateRequest) GetID() uint64 {
 	if m != nil {
@@ -2084,7 +2135,7 @@ type MemberUpdateResponse struct {
 func (m *MemberUpdateResponse) Reset()                    { *m = MemberUpdateResponse{} }
 func (m *MemberUpdateResponse) String() string            { return proto.CompactTextString(m) }
 func (*MemberUpdateResponse) ProtoMessage()               {}
-func (*MemberUpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{36} }
+func (*MemberUpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{38} }
 
 func (m *MemberUpdateResponse) GetHeader() *ResponseHeader {
 	if m != nil {
@@ -2106,7 +2157,7 @@ type MemberListRequest struct {
 func (m *MemberListRequest) Reset()                    { *m = MemberListRequest{} }
 func (m *MemberListRequest) String() string            { return proto.CompactTextString(m) }
 func (*MemberListRequest) ProtoMessage()               {}
-func (*MemberListRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{37} }
+func (*MemberListRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{39} }
 
 type MemberListResponse struct {
 	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
@@ -2117,7 +2168,7 @@ type MemberListResponse struct {
 func (m *MemberListResponse) Reset()                    { *m = MemberListResponse{} }
 func (m *MemberListResponse) String() string            { return proto.CompactTextString(m) }
 func (*MemberListResponse) ProtoMessage()               {}
-func (*MemberListResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{38} }
+func (*MemberListResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{40} }
 
 func (m *MemberListResponse) GetHeader() *ResponseHeader {
 	if m != nil {
@@ -2139,7 +2190,7 @@ type DefragmentRequest struct {
 func (m *DefragmentRequest) Reset()                    { *m = DefragmentRequest{} }
 func (m *DefragmentRequest) String() string            { return proto.CompactTextString(m) }
 func (*DefragmentRequest) ProtoMessage()               {}
-func (*DefragmentRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{39} }
+func (*DefragmentRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{41} }
 
 type DefragmentResponse struct {
 	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
@@ -2148,7 +2199,7 @@ type DefragmentResponse struct {
 func (m *DefragmentResponse) Reset()                    { *m = DefragmentResponse{} }
 func (m *DefragmentResponse) String() string            { return proto.CompactTextString(m) }
 func (*DefragmentResponse) ProtoMessage()               {}
-func (*DefragmentResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{40} }
+func (*DefragmentResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{42} }
 
 func (m *DefragmentResponse) GetHeader() *ResponseHeader {
 	if m != nil {
@@ -2165,7 +2216,7 @@ type MoveLeaderRequest struct {
 func (m *MoveLeaderRequest) Reset()                    { *m = MoveLeaderRequest{} }
 func (m *MoveLeaderRequest) String() string            { return proto.CompactTextString(m) }
 func (*MoveLeaderRequest) ProtoMessage()               {}
-func (*MoveLeaderRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{41} }
+func (*MoveLeaderRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{43} }
 
 func (m *MoveLeaderRequest) GetTargetID() uint64 {
 	if m != nil {
@@ -2181,7 +2232,7 @@ type MoveLeaderResponse struct {
 func (m *MoveLeaderResponse) Reset()                    { *m = MoveLeaderResponse{} }
 func (m *MoveLeaderResponse) String() string            { return proto.CompactTextString(m) }
 func (*MoveLeaderResponse) ProtoMessage()               {}
-func (*MoveLeaderResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{42} }
+func (*MoveLeaderResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{44} }
 
 func (m *MoveLeaderResponse) GetHeader() *ResponseHeader {
 	if m != nil {
@@ -2205,7 +2256,7 @@ type AlarmRequest struct {
 func (m *AlarmRequest) Reset()                    { *m = AlarmRequest{} }
 func (m *AlarmRequest) String() string            { return proto.CompactTextString(m) }
 func (*AlarmRequest) ProtoMessage()               {}
-func (*AlarmRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{43} }
+func (*AlarmRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{45} }
 
 func (m *AlarmRequest) GetAction() AlarmRequest_AlarmAction {
 	if m != nil {
@@ -2238,7 +2289,7 @@ type AlarmMember struct {
 func (m *AlarmMember) Reset()                    { *m = AlarmMember{} }
 func (m *AlarmMember) String() string            { return proto.CompactTextString(m) }
 func (*AlarmMember) ProtoMessage()               {}
-func (*AlarmMember) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{44} }
+func (*AlarmMember) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{46} }
 
 func (m *AlarmMember) GetMemberID() uint64 {
 	if m != nil {
@@ -2263,7 +2314,7 @@ type AlarmResponse struct {
 func (m *AlarmResponse) Reset()                    { *m = AlarmResponse{} }
 func (m *AlarmResponse) String() string            { return proto.CompactTextString(m) }
 func (*AlarmResponse) ProtoMessage()               {}
-func (*AlarmResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{45} }
+func (*AlarmResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{47} }
 
 func (m *AlarmResponse) GetHeader() *ResponseHeader {
 	if m != nil {
@@ -2285,7 +2336,7 @@ type StatusRequest struct {
 func (m *StatusRequest) Reset()                    { *m = StatusRequest{} }
 func (m *StatusRequest) String() string            { return proto.CompactTextString(m) }
 func (*StatusRequest) ProtoMessage()               {}
-func (*StatusRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{46} }
+func (*StatusRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{48} }
 
 type StatusResponse struct {
 	Header *ResponseHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
@@ -2304,7 +2355,7 @@ type StatusResponse struct {
 func (m *StatusResponse) Reset()                    { *m = StatusResponse{} }
 func (m *StatusResponse) String() string            { return proto.CompactTextString(m) }
 func (*StatusResponse) ProtoMessage()               {}
-func (*StatusResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{47} }
+func (*StatusResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{49} }
 
 func (m *StatusResponse) GetHeader() *ResponseHeader {
 	if m != nil {
@@ -2354,7 +2405,7 @@ type AuthEnableRequest struct {
 func (m *AuthEnableRequest) Reset()                    { *m = AuthEnableRequest{} }
 func (m *AuthEnableRequest) String() string            { return proto.CompactTextString(m) }
 func (*AuthEnableRequest) ProtoMessage()               {}
-func (*AuthEnableRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{48} }
+func (*AuthEnableRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{50} }
 
 type AuthDisableRequest struct {
 }
@@ -2362,7 +2413,7 @@ type AuthDisableRequest struct {
 func (m *AuthDisableRequest) Reset()                    { *m = AuthDisableRequest{} }
 func (m *AuthDisableRequest) String() string            { return proto.CompactTextString(m) }
 func (*AuthDisableRequest) ProtoMessage()               {}
-func (*AuthDisableRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{49} }
+func (*AuthDisableRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{51} }
 
 type AuthenticateRequest struct {
 	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
@@ -2372,7 +2423,7 @@ type AuthenticateRequest struct {
 func (m *AuthenticateRequest) Reset()                    { *m = AuthenticateRequest{} }
 func (m *AuthenticateRequest) String() string            { return proto.CompactTextString(m) }
 func (*AuthenticateRequest) ProtoMessage()               {}
-func (*AuthenticateRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{50} }
+func (*AuthenticateRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{52} }
 
 func (m *AuthenticateRequest) GetName() string {
 	if m != nil {
@@ -2396,7 +2447,7 @@ type AuthUserAddRequest struct {
 func (m *AuthUserAddRequest) Reset()                    { *m = AuthUserAddRequest{} }
 func (m *AuthUserAddRequest) String() string            { return proto.CompactTextString(m) }
 func (*AuthUserAddRequest) ProtoMessage()               {}
-func (*AuthUserAddRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{51} }
+func (*AuthUserAddRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{53} }
 
 func (m *AuthUserAddRequest) GetName() string {
 	if m != nil {
@@ -2419,7 +2470,7 @@ type AuthUserGetRequest struct {
 func (m *AuthUserGetRequest) Reset()                    { *m = AuthUserGetRequest{} }
 func (m *AuthUserGetRequest) String() string            { return proto.CompactTextString(m) }
 func (*AuthUserGetRequest) ProtoMessage()               {}
-func (*AuthUserGetRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{52} }
+func (*AuthUserGetRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{54} }
 
 func (m *AuthUserGetRequest) GetName() string {
 	if m != nil {
@@ -2436,7 +2487,7 @@ type AuthUserDeleteRequest struct {
 func (m *AuthUserDeleteRequest) Reset()                    { *m = AuthUserDeleteRequest{} }
 func (m *AuthUserDeleteRequest) String() string            { return proto.CompactTextString(m) }
 func (*AuthUserDeleteRequest) ProtoMessage()               {}
-func (*AuthUserDeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{53} }
+func (*AuthUserDeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{55} }
 
 func (m *AuthUserDeleteRequest) GetName() string {
 	if m != nil {
@@ -2456,7 +2507,7 @@ func (m *AuthUserChangePasswordRequest) Reset()         { *m = AuthUserChangePas
 func (m *AuthUserChangePasswordRequest) String() string { return proto.CompactTextString(m) }
 func (*AuthUserChangePasswordRequest) ProtoMessage()    {}
 func (*AuthUserChangePasswordRequest) Descriptor() ([]byte, []int) {
-	return fileDescriptorRpc, []int{54}
+	return fileDescriptorRpc, []int{56}
 }
 
 func (m *AuthUserChangePasswordRequest) GetName() string {
@@ -2483,7 +2534,7 @@ type AuthUserGrantRoleRequest struct {
 func (m *AuthUserGrantRoleRequest) Reset()                    { *m = AuthUserGrantRoleRequest{} }
 func (m *AuthUserGrantRoleRequest) String() string            { return proto.CompactTextString(m) }
 func (*AuthUserGrantRoleRequest) ProtoMessage()               {}
-func (*AuthUserGrantRoleRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{55} }
+func (*AuthUserGrantRoleRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{57} }
 
 func (m *AuthUserGrantRoleRequest) GetUser() string {
 	if m != nil {
@@ -2507,7 +2558,7 @@ type AuthUserRevokeRoleRequest struct {
 func (m *AuthUserRevokeRoleRequest) Reset()                    { *m = AuthUserRevokeRoleRequest{} }
 func (m *AuthUserRevokeRoleRequest) String() string            { return proto.CompactTextString(m) }
 func (*AuthUserRevokeRoleRequest) ProtoMessage()               {}
-func (*AuthUserRevokeRoleRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{56} }
+func (*AuthUserRevokeRoleRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{58} }
 
 func (m *AuthUserRevokeRoleRequest) GetName() string {
 	if m != nil {
@@ -2531,7 +2582,7 @@ type AuthRoleAddRequest struct {
 func (m *AuthRoleAddRequest) Reset()                    { *m = AuthRoleAddRequest{} }
 func (m *AuthRoleAddRequest) String() string            { return proto.CompactTextString(m) }
 func (*AuthRoleAddRequest) ProtoMessage()               {}
-func (*AuthRoleAddRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{57} }
+func (*AuthRoleAddRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{59} }
 
 func (m *AuthRoleAddRequest) GetName() string {
 	if m != nil {
@@ -2547,7 +2598,7 @@ type AuthRoleGetRequest struct {
 func (m *AuthRoleGetRequest) Reset()                    { *m = AuthRoleGetRequest{} }
 func (m *AuthRoleGetRequest) String() string            { return proto.CompactTextString(m) }
 func (*AuthRoleGetRequest) ProtoMessage()               {}
-func (*AuthRoleGetRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{58} }
+func (*AuthRoleGetRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{60} }
 
 func (m *AuthRoleGetRequest) GetRole() string {
 	if m != nil {
@@ -2562,7 +2613,7 @@ type AuthUserListRequest struct {
 func (m *AuthUserListRequest) Reset()                    { *m = AuthUserListRequest{} }
 func (m *AuthUserListRequest) String() string            { return proto.CompactTextString(m) }
 func (*AuthUserListRequest) ProtoMessage()               {}
-func (*AuthUserListRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{59} }
+func (*AuthUserListRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{61} }
 
 type AuthRoleListRequest struct {
 }
@@ -2570,7 +2621,7 @@ type AuthRoleListRequest struct {
 func (m *AuthRoleListRequest) Reset()                    { *m = AuthRoleListRequest{} }
 func (m *AuthRoleListRequest) String() string            { return proto.CompactTextString(m) }
 func (*AuthRoleListRequest) ProtoMessage()               {}
-func (*AuthRoleListRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{60} }
+func (*AuthRoleListRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{62} }
 
 type AuthRoleDeleteRequest struct {
 	Role string `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
@@ -2579,7 +2630,7 @@ type AuthRoleDeleteRequest struct {
 func (m *AuthRoleDeleteRequest) Reset()                    { *m = AuthRoleDeleteRequest{} }
 func (m *AuthRoleDeleteRequest) String() string            { return proto.CompactTextString(m) }
 func (*AuthRoleDeleteRequest) ProtoMessage()               {}
-func (*AuthRoleDeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{61} }
+func (*AuthRoleDeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{63} }
 
 func (m *AuthRoleDeleteRequest) GetRole() string {
 	if m != nil {
@@ -2599,7 +2650,7 @@ func (m *AuthRoleGrantPermissionRequest) Reset()         { *m = AuthRoleGrantPer
 func (m *AuthRoleGrantPermissionRequest) String() string { return proto.CompactTextString(m) }
 func (*AuthRoleGrantPermissionRequest) ProtoMessage()    {}
 func (*AuthRoleGrantPermissionRequest) Descriptor() ([]byte, []int) {
-	return fileDescriptorRpc, []int{62}
+	return fileDescriptorRpc, []int{64}
 }
 
 func (m *AuthRoleGrantPermissionRequest) GetName() string {
@@ -2626,7 +2677,7 @@ func (m *AuthRoleRevokePermissionRequest) Reset()         { *m = AuthRoleRevokeP
 func (m *AuthRoleRevokePermissionRequest) String() string { return proto.CompactTextString(m) }
 func (*AuthRoleRevokePermissionRequest) ProtoMessage()    {}
 func (*AuthRoleRevokePermissionRequest) Descriptor() ([]byte, []int) {
-	return fileDescriptorRpc, []int{63}
+	return fileDescriptorRpc, []int{65}
 }
 
 func (m *AuthRoleRevokePermissionRequest) GetRole() string {
@@ -2657,7 +2708,7 @@ type AuthEnableResponse struct {
 func (m *AuthEnableResponse) Reset()                    { *m = AuthEnableResponse{} }
 func (m *AuthEnableResponse) String() string            { return proto.CompactTextString(m) }
 func (*AuthEnableResponse) ProtoMessage()               {}
-func (*AuthEnableResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{64} }
+func (*AuthEnableResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{66} }
 
 func (m *AuthEnableResponse) GetHeader() *ResponseHeader {
 	if m != nil {
@@ -2673,7 +2724,7 @@ type AuthDisableResponse struct {
 func (m *AuthDisableResponse) Reset()                    { *m = AuthDisableResponse{} }
 func (m *AuthDisableResponse) String() string            { return proto.CompactTextString(m) }
 func (*AuthDisableResponse) ProtoMessage()               {}
-func (*AuthDisableResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{65} }
+func (*AuthDisableResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{67} }
 
 func (m *AuthDisableResponse) GetHeader() *ResponseHeader {
 	if m != nil {
@@ -2691,7 +2742,7 @@ type AuthenticateResponse struct {
 func (m *AuthenticateResponse) Reset()                    { *m = AuthenticateResponse{} }
 func (m *AuthenticateResponse) String() string            { return proto.CompactTextString(m) }
 func (*AuthenticateResponse) ProtoMessage()               {}
-func (*AuthenticateResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{66} }
+func (*AuthenticateResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{68} }
 
 func (m *AuthenticateResponse) GetHeader() *ResponseHeader {
 	if m != nil {
@@ -2714,7 +2765,7 @@ type AuthUserAddResponse struct {
 func (m *AuthUserAddResponse) Reset()                    { *m = AuthUserAddResponse{} }
 func (m *AuthUserAddResponse) String() string            { return proto.CompactTextString(m) }
 func (*AuthUserAddResponse) ProtoMessage()               {}
-func (*AuthUserAddResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{67} }
+func (*AuthUserAddResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{69} }
 
 func (m *AuthUserAddResponse) GetHeader() *ResponseHeader {
 	if m != nil {
@@ -2731,7 +2782,7 @@ type AuthUserGetResponse struct {
 func (m *AuthUserGetResponse) Reset()                    { *m = AuthUserGetResponse{} }
 func (m *AuthUserGetResponse) String() string            { return proto.CompactTextString(m) }
 func (*AuthUserGetResponse) ProtoMessage()               {}
-func (*AuthUserGetResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{68} }
+func (*AuthUserGetResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{70} }
 
 func (m *AuthUserGetResponse) GetHeader() *ResponseHeader {
 	if m != nil {
@@ -2754,7 +2805,7 @@ type AuthUserDeleteResponse struct {
 func (m *AuthUserDeleteResponse) Reset()                    { *m = AuthUserDeleteResponse{} }
 func (m *AuthUserDeleteResponse) String() string            { return proto.CompactTextString(m) }
 func (*AuthUserDeleteResponse) ProtoMessage()               {}
-func (*AuthUserDeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{69} }
+func (*AuthUserDeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{71} }
 
 func (m *AuthUserDeleteResponse) GetHeader() *ResponseHeader {
 	if m != nil {
@@ -2771,7 +2822,7 @@ func (m *AuthUserChangePasswordResponse) Reset()         { *m = AuthUserChangePa
 func (m *AuthUserChangePasswordResponse) String() string { return proto.CompactTextString(m) }
 func (*AuthUserChangePasswordResponse) ProtoMessage()    {}
 func (*AuthUserChangePasswordResponse) Descriptor() ([]byte, []int) {
-	return fileDescriptorRpc, []int{70}
+	return fileDescriptorRpc, []int{72}
 }
 
 func (m *AuthUserChangePasswordResponse) GetHeader() *ResponseHeader {
@@ -2788,7 +2839,7 @@ type AuthUserGrantRoleResponse struct {
 func (m *AuthUserGrantRoleResponse) Reset()                    { *m = AuthUserGrantRoleResponse{} }
 func (m *AuthUserGrantRoleResponse) String() string            { return proto.CompactTextString(m) }
 func (*AuthUserGrantRoleResponse) ProtoMessage()               {}
-func (*AuthUserGrantRoleResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{71} }
+func (*AuthUserGrantRoleResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{73} }
 
 func (m *AuthUserGrantRoleResponse) GetHeader() *ResponseHeader {
 	if m != nil {
@@ -2804,7 +2855,7 @@ type AuthUserRevokeRoleResponse struct {
 func (m *AuthUserRevokeRoleResponse) Reset()                    { *m = AuthUserRevokeRoleResponse{} }
 func (m *AuthUserRevokeRoleResponse) String() string            { return proto.CompactTextString(m) }
 func (*AuthUserRevokeRoleResponse) ProtoMessage()               {}
-func (*AuthUserRevokeRoleResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{72} }
+func (*AuthUserRevokeRoleResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{74} }
 
 func (m *AuthUserRevokeRoleResponse) GetHeader() *ResponseHeader {
 	if m != nil {
@@ -2820,7 +2871,7 @@ type AuthRoleAddResponse struct {
 func (m *AuthRoleAddResponse) Reset()                    { *m = AuthRoleAddResponse{} }
 func (m *AuthRoleAddResponse) String() string            { return proto.CompactTextString(m) }
 func (*AuthRoleAddResponse) ProtoMessage()               {}
-func (*AuthRoleAddResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{73} }
+func (*AuthRoleAddResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{75} }
 
 func (m *AuthRoleAddResponse) GetHeader() *ResponseHeader {
 	if m != nil {
@@ -2837,7 +2888,7 @@ type AuthRoleGetResponse struct {
 func (m *AuthRoleGetResponse) Reset()                    { *m = AuthRoleGetResponse{} }
 func (m *AuthRoleGetResponse) String() string            { return proto.CompactTextString(m) }
 func (*AuthRoleGetResponse) ProtoMessage()               {}
-func (*AuthRoleGetResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{74} }
+func (*AuthRoleGetResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{76} }
 
 func (m *AuthRoleGetResponse) GetHeader() *ResponseHeader {
 	if m != nil {
@@ -2861,7 +2912,7 @@ type AuthRoleListResponse struct {
 func (m *AuthRoleListResponse) Reset()                    { *m = AuthRoleListResponse{} }
 func (m *AuthRoleListResponse) String() string            { return proto.CompactTextString(m) }
 func (*AuthRoleListResponse) ProtoMessage()               {}
-func (*AuthRoleListResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{75} }
+func (*AuthRoleListResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{77} }
 
 func (m *AuthRoleListResponse) GetHeader() *ResponseHeader {
 	if m != nil {
@@ -2885,7 +2936,7 @@ type AuthUserListResponse struct {
 func (m *AuthUserListResponse) Reset()                    { *m = AuthUserListResponse{} }
 func (m *AuthUserListResponse) String() string            { return proto.CompactTextString(m) }
 func (*AuthUserListResponse) ProtoMessage()               {}
-func (*AuthUserListResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{76} }
+func (*AuthUserListResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{78} }
 
 func (m *AuthUserListResponse) GetHeader() *ResponseHeader {
 	if m != nil {
@@ -2908,7 +2959,7 @@ type AuthRoleDeleteResponse struct {
 func (m *AuthRoleDeleteResponse) Reset()                    { *m = AuthRoleDeleteResponse{} }
 func (m *AuthRoleDeleteResponse) String() string            { return proto.CompactTextString(m) }
 func (*AuthRoleDeleteResponse) ProtoMessage()               {}
-func (*AuthRoleDeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{77} }
+func (*AuthRoleDeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptorRpc, []int{79} }
 
 func (m *AuthRoleDeleteResponse) GetHeader() *ResponseHeader {
 	if m != nil {
@@ -2925,7 +2976,7 @@ func (m *AuthRoleGrantPermissionResponse) Reset()         { *m = AuthRoleGrantPe
 func (m *AuthRoleGrantPermissionResponse) String() string { return proto.CompactTextString(m) }
 func (*AuthRoleGrantPermissionResponse) ProtoMessage()    {}
 func (*AuthRoleGrantPermissionResponse) Descriptor() ([]byte, []int) {
-	return fileDescriptorRpc, []int{78}
+	return fileDescriptorRpc, []int{80}
 }
 
 func (m *AuthRoleGrantPermissionResponse) GetHeader() *ResponseHeader {
@@ -2943,7 +2994,7 @@ func (m *AuthRoleRevokePermissionResponse) Reset()         { *m = AuthRoleRevoke
 func (m *AuthRoleRevokePermissionResponse) String() string { return proto.CompactTextString(m) }
 func (*AuthRoleRevokePermissionResponse) ProtoMessage()    {}
 func (*AuthRoleRevokePermissionResponse) Descriptor() ([]byte, []int) {
-	return fileDescriptorRpc, []int{79}
+	return fileDescriptorRpc, []int{81}
 }
 
 func (m *AuthRoleRevokePermissionResponse) GetHeader() *ResponseHeader {
@@ -2969,6 +3020,8 @@ func init() {
 	proto.RegisterType((*CompactionRequest)(nil), "etcdserverpb.CompactionRequest")
 	proto.RegisterType((*CompactionResponse)(nil), "etcdserverpb.CompactionResponse")
 	proto.RegisterType((*HashRequest)(nil), "etcdserverpb.HashRequest")
+	proto.RegisterType((*HashKVRequest)(nil), "etcdserverpb.HashKVRequest")
+	proto.RegisterType((*HashKVResponse)(nil), "etcdserverpb.HashKVResponse")
 	proto.RegisterType((*HashResponse)(nil), "etcdserverpb.HashResponse")
 	proto.RegisterType((*SnapshotRequest)(nil), "etcdserverpb.SnapshotRequest")
 	proto.RegisterType((*SnapshotResponse)(nil), "etcdserverpb.SnapshotResponse")
@@ -3771,10 +3824,12 @@ type MaintenanceClient interface {
 	Status(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusResponse, error)
 	// Defragment defragments a member's backend database to recover storage space.
 	Defragment(ctx context.Context, in *DefragmentRequest, opts ...grpc.CallOption) (*DefragmentResponse, error)
-	// Hash returns the hash of the local KV state for consistency checking purpose.
+	// Hash computes the hash of the KV's backend.
 	// This is designed for testing; do not use this in production when there
 	// are ongoing transactions.
 	Hash(ctx context.Context, in *HashRequest, opts ...grpc.CallOption) (*HashResponse, error)
+	// HashKV computes the hash of all MVCC keys up to a given revision.
+	HashKV(ctx context.Context, in *HashKVRequest, opts ...grpc.CallOption) (*HashKVResponse, error)
 	// Snapshot sends a snapshot of the entire backend from a member over a stream to a client.
 	Snapshot(ctx context.Context, in *SnapshotRequest, opts ...grpc.CallOption) (Maintenance_SnapshotClient, error)
 	// MoveLeader requests current leader node to transfer its leadership to transferee.
@@ -3825,6 +3880,15 @@ func (c *maintenanceClient) Hash(ctx context.Context, in *HashRequest, opts ...g
 	return out, nil
 }
 
+func (c *maintenanceClient) HashKV(ctx context.Context, in *HashKVRequest, opts ...grpc.CallOption) (*HashKVResponse, error) {
+	out := new(HashKVResponse)
+	err := grpc.Invoke(ctx, "/etcdserverpb.Maintenance/HashKV", in, out, c.cc, opts...)
+	if err != nil {
+		return nil, err
+	}
+	return out, nil
+}
+
 func (c *maintenanceClient) Snapshot(ctx context.Context, in *SnapshotRequest, opts ...grpc.CallOption) (Maintenance_SnapshotClient, error) {
 	stream, err := grpc.NewClientStream(ctx, &_Maintenance_serviceDesc.Streams[0], c.cc, "/etcdserverpb.Maintenance/Snapshot", opts...)
 	if err != nil {
@@ -3875,10 +3939,12 @@ type MaintenanceServer interface {
 	Status(context.Context, *StatusRequest) (*StatusResponse, error)
 	// Defragment defragments a member's backend database to recover storage space.
 	Defragment(context.Context, *DefragmentRequest) (*DefragmentResponse, error)
-	// Hash returns the hash of the local KV state for consistency checking purpose.
+	// Hash computes the hash of the KV's backend.
 	// This is designed for testing; do not use this in production when there
 	// are ongoing transactions.
 	Hash(context.Context, *HashRequest) (*HashResponse, error)
+	// HashKV computes the hash of all MVCC keys up to a given revision.
+	HashKV(context.Context, *HashKVRequest) (*HashKVResponse, error)
 	// Snapshot sends a snapshot of the entire backend from a member over a stream to a client.
 	Snapshot(*SnapshotRequest, Maintenance_SnapshotServer) error
 	// MoveLeader requests current leader node to transfer its leadership to transferee.
@@ -3961,6 +4027,24 @@ func _Maintenance_Hash_Handler(srv interface{}, ctx context.Context, dec func(in
 	return interceptor(ctx, in, info, handler)
 }
 
+func _Maintenance_HashKV_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
+	in := new(HashKVRequest)
+	if err := dec(in); err != nil {
+		return nil, err
+	}
+	if interceptor == nil {
+		return srv.(MaintenanceServer).HashKV(ctx, in)
+	}
+	info := &grpc.UnaryServerInfo{
+		Server:     srv,
+		FullMethod: "/etcdserverpb.Maintenance/HashKV",
+	}
+	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
+		return srv.(MaintenanceServer).HashKV(ctx, req.(*HashKVRequest))
+	}
+	return interceptor(ctx, in, info, handler)
+}
+
 func _Maintenance_Snapshot_Handler(srv interface{}, stream grpc.ServerStream) error {
 	m := new(SnapshotRequest)
 	if err := stream.RecvMsg(m); err != nil {
@@ -4021,6 +4105,10 @@ var _Maintenance_serviceDesc = grpc.ServiceDesc{
 			Handler:    _Maintenance_Hash_Handler,
 		},
 		{
+			MethodName: "HashKV",
+			Handler:    _Maintenance_HashKV_Handler,
+		},
+		{
 			MethodName: "MoveLeader",
 			Handler:    _Maintenance_MoveLeader_Handler,
 		},
@@ -5430,7 +5518,7 @@ func (m *HashRequest) MarshalTo(dAtA []byte) (int, error) {
 	return i, nil
 }
 
-func (m *HashResponse) Marshal() (dAtA []byte, err error) {
+func (m *HashKVRequest) Marshal() (dAtA []byte, err error) {
 	size := m.Size()
 	dAtA = make([]byte, size)
 	n, err := m.MarshalTo(dAtA)
@@ -5440,7 +5528,30 @@ func (m *HashResponse) Marshal() (dAtA []byte, err error) {
 	return dAtA[:n], nil
 }
 
-func (m *HashResponse) MarshalTo(dAtA []byte) (int, error) {
+func (m *HashKVRequest) MarshalTo(dAtA []byte) (int, error) {
+	var i int
+	_ = i
+	var l int
+	_ = l
+	if m.Revision != 0 {
+		dAtA[i] = 0x8
+		i++
+		i = encodeVarintRpc(dAtA, i, uint64(m.Revision))
+	}
+	return i, nil
+}
+
+func (m *HashKVResponse) Marshal() (dAtA []byte, err error) {
+	size := m.Size()
+	dAtA = make([]byte, size)
+	n, err := m.MarshalTo(dAtA)
+	if err != nil {
+		return nil, err
+	}
+	return dAtA[:n], nil
+}
+
+func (m *HashKVResponse) MarshalTo(dAtA []byte) (int, error) {
 	var i int
 	_ = i
 	var l int
@@ -5460,6 +5571,44 @@ func (m *HashResponse) MarshalTo(dAtA []byte) (int, error) {
 		i++
 		i = encodeVarintRpc(dAtA, i, uint64(m.Hash))
 	}
+	if m.CompactRevision != 0 {
+		dAtA[i] = 0x18
+		i++
+		i = encodeVarintRpc(dAtA, i, uint64(m.CompactRevision))
+	}
+	return i, nil
+}
+
+func (m *HashResponse) Marshal() (dAtA []byte, err error) {
+	size := m.Size()
+	dAtA = make([]byte, size)
+	n, err := m.MarshalTo(dAtA)
+	if err != nil {
+		return nil, err
+	}
+	return dAtA[:n], nil
+}
+
+func (m *HashResponse) MarshalTo(dAtA []byte) (int, error) {
+	var i int
+	_ = i
+	var l int
+	_ = l
+	if m.Header != nil {
+		dAtA[i] = 0xa
+		i++
+		i = encodeVarintRpc(dAtA, i, uint64(m.Header.Size()))
+		n19, err := m.Header.MarshalTo(dAtA[i:])
+		if err != nil {
+			return 0, err
+		}
+		i += n19
+	}
+	if m.Hash != 0 {
+		dAtA[i] = 0x10
+		i++
+		i = encodeVarintRpc(dAtA, i, uint64(m.Hash))
+	}
 	return i, nil
 }
 
@@ -5500,11 +5649,11 @@ func (m *SnapshotResponse) MarshalTo(dAtA []byte) (int, error) {
 		dAtA[i] = 0xa
 		i++
 		i = encodeVarintRpc(dAtA, i, uint64(m.Header.Size()))
-		n19, err := m.Header.MarshalTo(dAtA[i:])
+		n20, err := m.Header.MarshalTo(dAtA[i:])
 		if err != nil {
 			return 0, err
 		}
-		i += n19
+		i += n20
 	}
 	if m.RemainingBytes != 0 {
 		dAtA[i] = 0x10
@@ -5536,11 +5685,11 @@ func (m *WatchRequest) MarshalTo(dAtA []byte) (int, error) {
 	var l int
 	_ = l
 	if m.RequestUnion != nil {
-		nn20, err := m.RequestUnion.MarshalTo(dAtA[i:])
+		nn21, err := m.RequestUnion.MarshalTo(dAtA[i:])
 		if err != nil {
 			return 0, err
 		}
-		i += nn20
+		i += nn21
 	}
 	return i, nil
 }
@@ -5551,11 +5700,11 @@ func (m *WatchRequest_CreateRequest) MarshalTo(dAtA []byte) (int, error) {
 		dAtA[i] = 0xa
 		i++
 		i = encodeVarintRpc(dAtA, i, uint64(m.CreateRequest.Size()))
-		n21, err := m.CreateRequest.MarshalTo(dAtA[i:])
+		n22, err := m.CreateRequest.MarshalTo(dAtA[i:])
 		if err != nil {
 			return 0, err
 		}
-		i += n21
+		i += n22
 	}
 	return i, nil
 }
@@ -5565,11 +5714,11 @@ func (m *WatchRequest_CancelRequest) MarshalTo(dAtA []byte) (int, error) {
 		dAtA[i] = 0x12
 		i++
 		i = encodeVarintRpc(dAtA, i, uint64(m.CancelRequest.Size()))
-		n22, err := m.CancelRequest.MarshalTo(dAtA[i:])
+		n23, err := m.CancelRequest.MarshalTo(dAtA[i:])
 		if err != nil {
 			return 0, err
 		}
-		i += n22
+		i += n23
 	}
 	return i, nil
 }
@@ -5616,21 +5765,21 @@ func (m *WatchCreateRequest) MarshalTo(dAtA []byte) (int, error) {
 		i++
 	}
 	if len(m.Filters) > 0 {
-		dAtA24 := make([]byte, len(m.Filters)*10)
-		var j23 int
+		dAtA25 := make([]byte, len(m.Filters)*10)
+		var j24 int
 		for _, num := range m.Filters {
 			for num >= 1<<7 {
-				dAtA24[j23] = uint8(uint64(num)&0x7f | 0x80)
+				dAtA25[j24] = uint8(uint64(num)&0x7f | 0x80)
 				num >>= 7
-				j23++
+				j24++
 			}
-			dAtA24[j23] = uint8(num)
-			j23++
+			dAtA25[j24] = uint8(num)
+			j24++
 		}
 		dAtA[i] = 0x2a
 		i++
-		i = encodeVarintRpc(dAtA, i, uint64(j23))
-		i += copy(dAtA[i:], dAtA24[:j23])
+		i = encodeVarintRpc(dAtA, i, uint64(j24))
+		i += copy(dAtA[i:], dAtA25[:j24])
 	}
 	if m.PrevKv {
 		dAtA[i] = 0x30
@@ -5687,11 +5836,11 @@ func (m *WatchResponse) MarshalTo(dAtA []byte) (int, error) {
 		dAtA[i] = 0xa
 		i++
 		i = encodeVarintRpc(dAtA, i, uint64(m.Header.Size()))
-		n25, err := m.Header.MarshalTo(dAtA[i:])
+		n26, err := m.Header.MarshalTo(dAtA[i:])
 		if err != nil {
 			return 0, err
 		}
-		i += n25
+		i += n26
 	}
 	if m.WatchId != 0 {
 		dAtA[i] = 0x10
@@ -5791,11 +5940,11 @@ func (m *LeaseGrantResponse) MarshalTo(dAtA []byte) (int, error) {
 		dAtA[i] = 0xa
 		i++
 		i = encodeVarintRpc(dAtA, i, uint64(m.Header.Size()))
-		n26, err := m.Header.MarshalTo(dAtA[i:])
+		n27, err := m.Header.MarshalTo(dAtA[i:])
 		if err != nil {
 			return 0, err
 		}
-		i += n26
+		i += n27
 	}
 	if m.ID != 0 {
 		dAtA[i] = 0x10
@@ -5858,11 +6007,11 @@ func (m *LeaseRevokeResponse) MarshalTo(dAtA []byte) (int, error) {
 		dAtA[i] = 0xa
 		i++
 		i = encodeVarintRpc(dAtA, i, uint64(m.Header.Size()))
-		n27, err := m.Header.MarshalTo(dAtA[i:])
+		n28, err := m.Header.MarshalTo(dAtA[i:])
 		if err != nil {
 			return 0, err
 		}
-		i += n27
+		i += n28
 	}
 	return i, nil
 }
@@ -5909,11 +6058,11 @@ func (m *LeaseKeepAliveResponse) MarshalTo(dAtA []byte) (int, error) {
 		dAtA[i] = 0xa
 		i++
 		i = encodeVarintRpc(dAtA, i, uint64(m.Header.Size()))
-		n28, err := m.Header.MarshalTo(dAtA[i:])
+		n29, err := m.Header.MarshalTo(dAtA[i:])
 		if err != nil {
 			return 0, err
 		}
-		i += n28
+		i += n29
 	}
 	if m.ID != 0 {
 		dAtA[i] = 0x10
@@ -5980,11 +6129,11 @@ func (m *LeaseTimeToLiveResponse) MarshalTo(dAtA []byte) (int, error) {
 		dAtA[i] = 0xa
 		i++
 		i = encodeVarintRpc(dAtA, i, uint64(m.Header.Size()))
-		n29, err := m.Header.MarshalTo(dAtA[i:])
+		n30, err := m.Header.MarshalTo(dAtA[i:])
 		if err != nil {
 			return 0, err
 		}
-		i += n29
+		i += n30
 	}
 	if m.ID != 0 {
 		dAtA[i] = 0x10
@@ -6123,21 +6272,21 @@ func (m *MemberAddResponse) MarshalTo(dAtA []byte) (int, error) {
 		dAtA[i] = 0xa
 		i++
 		i = encodeVarintRpc(dAtA, i, uint64(m.Header.Size()))
-		n30, err := m.Header.MarshalTo(dAtA[i:])
+		n31, err := m.Header.MarshalTo(dAtA[i:])
 		if err != nil {
 			return 0, err
 		}
-		i += n30
+		i += n31
 	}
 	if m.Member != nil {
 		dAtA[i] = 0x12
 		i++
 		i = encodeVarintRpc(dAtA, i, uint64(m.Member.Size()))
-		n31, err := m.Member.MarshalTo(dAtA[i:])
+		n32, err := m.Member.MarshalTo(dAtA[i:])
 		if err != nil {
 			return 0, err
 		}
-		i += n31
+		i += n32
 	}
 	if len(m.Members) > 0 {
 		for _, msg := range m.Members {
@@ -6196,11 +6345,11 @@ func (m *MemberRemoveResponse) MarshalTo(dAtA []byte) (int, error) {
 		dAtA[i] = 0xa
 		i++
 		i = encodeVarintRpc(dAtA, i, uint64(m.Header.Size()))
-		n32, err := m.Header.MarshalTo(dAtA[i:])
+		n33, err := m.Header.MarshalTo(dAtA[i:])
 		if err != nil {
 			return 0, err
 		}
-		i += n32
+		i += n33
 	}
 	if len(m.Members) > 0 {
 		for _, msg := range m.Members {
@@ -6274,11 +6423,11 @@ func (m *MemberUpdateResponse) MarshalTo(dAtA []byte) (int, error) {
 		dAtA[i] = 0xa
 		i++
 		i = encodeVarintRpc(dAtA, i, uint64(m.Header.Size()))
-		n33, err := m.Header.MarshalTo(dAtA[i:])
+		n34, err := m.Header.MarshalTo(dAtA[i:])
 		if err != nil {
 			return 0, err
 		}
-		i += n33
+		i += n34
 	}
 	if len(m.Members) > 0 {
 		for _, msg := range m.Members {
@@ -6332,11 +6481,11 @@ func (m *MemberListResponse) MarshalTo(dAtA []byte) (int, error) {
 		dAtA[i] = 0xa
 		i++
 		i = encodeVarintRpc(dAtA, i, uint64(m.Header.Size()))
-		n34, err := m.Header.MarshalTo(dAtA[i:])
+		n35, err := m.Header.MarshalTo(dAtA[i:])
 		if err != nil {
 			return 0, err
 		}
-		i += n34
+		i += n35
 	}
 	if len(m.Members) > 0 {
 		for _, msg := range m.Members {
@@ -6390,11 +6539,11 @@ func (m *DefragmentResponse) MarshalTo(dAtA []byte) (int, error) {
 		dAtA[i] = 0xa
 		i++
 		i = encodeVarintRpc(dAtA, i, uint64(m.Header.Size()))
-		n35, err := m.Header.MarshalTo(dAtA[i:])
+		n36, err := m.Header.MarshalTo(dAtA[i:])
 		if err != nil {
 			return 0, err
 		}
-		i += n35
+		i += n36
 	}
 	return i, nil
 }
@@ -6441,11 +6590,11 @@ func (m *MoveLeaderResponse) MarshalTo(dAtA []byte) (int, error) {
 		dAtA[i] = 0xa
 		i++
 		i = encodeVarintRpc(dAtA, i, uint64(m.Header.Size()))
-		n36, err := m.Header.MarshalTo(dAtA[i:])
+		n37, err := m.Header.MarshalTo(dAtA[i:])
 		if err != nil {
 			return 0, err
 		}
-		i += n36
+		i += n37
 	}
 	return i, nil
 }
@@ -6530,11 +6679,11 @@ func (m *AlarmResponse) MarshalTo(dAtA []byte) (int, error) {
 		dAtA[i] = 0xa
 		i++
 		i = encodeVarintRpc(dAtA, i, uint64(m.Header.Size()))
-		n37, err := m.Header.MarshalTo(dAtA[i:])
+		n38, err := m.Header.MarshalTo(dAtA[i:])
 		if err != nil {
 			return 0, err
 		}
-		i += n37
+		i += n38
 	}
 	if len(m.Alarms) > 0 {
 		for _, msg := range m.Alarms {
@@ -6588,11 +6737,11 @@ func (m *StatusResponse) MarshalTo(dAtA []byte) (int, error) {
 		dAtA[i] = 0xa
 		i++
 		i = encodeVarintRpc(dAtA, i, uint64(m.Header.Size()))
-		n38, err := m.Header.MarshalTo(dAtA[i:])
+		n39, err := m.Header.MarshalTo(dAtA[i:])
 		if err != nil {
 			return 0, err
 		}
-		i += n38
+		i += n39
 	}
 	if len(m.Version) > 0 {
 		dAtA[i] = 0x12
@@ -6990,11 +7139,11 @@ func (m *AuthRoleGrantPermissionRequest) MarshalTo(dAtA []byte) (int, error) {
 		dAtA[i] = 0x12
 		i++
 		i = encodeVarintRpc(dAtA, i, uint64(m.Perm.Size()))
-		n39, err := m.Perm.MarshalTo(dAtA[i:])
+		n40, err := m.Perm.MarshalTo(dAtA[i:])
 		if err != nil {
 			return 0, err
 		}
-		i += n39
+		i += n40
 	}
 	return i, nil
 }
@@ -7054,11 +7203,11 @@ func (m *AuthEnableResponse) MarshalTo(dAtA []byte) (int, error) {
 		dAtA[i] = 0xa
 		i++
 		i = encodeVarintRpc(dAtA, i, uint64(m.Header.Size()))
-		n40, err := m.Header.MarshalTo(dAtA[i:])
+		n41, err := m.Header.MarshalTo(dAtA[i:])
 		if err != nil {
 			return 0, err
 		}
-		i += n40
+		i += n41
 	}
 	return i, nil
 }
@@ -7082,11 +7231,11 @@ func (m *AuthDisableResponse) MarshalTo(dAtA []byte) (int, error) {
 		dAtA[i] = 0xa
 		i++
 		i = encodeVarintRpc(dAtA, i, uint64(m.Header.Size()))
-		n41, err := m.Header.MarshalTo(dAtA[i:])
+		n42, err := m.Header.MarshalTo(dAtA[i:])
 		if err != nil {
 			return 0, err
 		}
-		i += n41
+		i += n42
 	}
 	return i, nil
 }
@@ -7110,11 +7259,11 @@ func (m *AuthenticateResponse) MarshalTo(dAtA []byte) (int, error) {
 		dAtA[i] = 0xa
 		i++
 		i = encodeVarintRpc(dAtA, i, uint64(m.Header.Size()))
-		n42, err := m.Header.MarshalTo(dAtA[i:])
+		n43, err := m.Header.MarshalTo(dAtA[i:])
 		if err != nil {
 			return 0, err
 		}
-		i += n42
+		i += n43
 	}
 	if len(m.Token) > 0 {
 		dAtA[i] = 0x12
@@ -7144,11 +7293,11 @@ func (m *AuthUserAddResponse) MarshalTo(dAtA []byte) (int, error) {
 		dAtA[i] = 0xa
 		i++
 		i = encodeVarintRpc(dAtA, i, uint64(m.Header.Size()))
-		n43, err := m.Header.MarshalTo(dAtA[i:])
+		n44, err := m.Header.MarshalTo(dAtA[i:])
 		if err != nil {
 			return 0, err
 		}
-		i += n43
+		i += n44
 	}
 	return i, nil
 }
@@ -7172,11 +7321,11 @@ func (m *AuthUserGetResponse) MarshalTo(dAtA []byte) (int, error) {
 		dAtA[i] = 0xa
 		i++
 		i = encodeVarintRpc(dAtA, i, uint64(m.Header.Size()))
-		n44, err := m.Header.MarshalTo(dAtA[i:])
+		n45, err := m.Header.MarshalTo(dAtA[i:])
 		if err != nil {
 			return 0, err
 		}
-		i += n44
+		i += n45
 	}
 	if len(m.Roles) > 0 {
 		for _, s := range m.Roles {
@@ -7215,11 +7364,11 @@ func (m *AuthUserDeleteResponse) MarshalTo(dAtA []byte) (int, error) {
 		dAtA[i] = 0xa
 		i++
 		i = encodeVarintRpc(dAtA, i, uint64(m.Header.Size()))
-		n45, err := m.Header.MarshalTo(dAtA[i:])
+		n46, err := m.Header.MarshalTo(dAtA[i:])
 		if err != nil {
 			return 0, err
 		}
-		i += n45
+		i += n46
 	}
 	return i, nil
 }
@@ -7243,11 +7392,11 @@ func (m *AuthUserChangePasswordResponse) MarshalTo(dAtA []byte) (int, error) {
 		dAtA[i] = 0xa
 		i++
 		i = encodeVarintRpc(dAtA, i, uint64(m.Header.Size()))
-		n46, err := m.Header.MarshalTo(dAtA[i:])
+		n47, err := m.Header.MarshalTo(dAtA[i:])
 		if err != nil {
 			return 0, err
 		}
-		i += n46
+		i += n47
 	}
 	return i, nil
 }
@@ -7271,11 +7420,11 @@ func (m *AuthUserGrantRoleResponse) MarshalTo(dAtA []byte) (int, error) {
 		dAtA[i] = 0xa
 		i++
 		i = encodeVarintRpc(dAtA, i, uint64(m.Header.Size()))
-		n47, err := m.Header.MarshalTo(dAtA[i:])
+		n48, err := m.Header.MarshalTo(dAtA[i:])
 		if err != nil {
 			return 0, err
 		}
-		i += n47
+		i += n48
 	}
 	return i, nil
 }
@@ -7299,11 +7448,11 @@ func (m *AuthUserRevokeRoleResponse) MarshalTo(dAtA []byte) (int, error) {
 		dAtA[i] = 0xa
 		i++
 		i = encodeVarintRpc(dAtA, i, uint64(m.Header.Size()))
-		n48, err := m.Header.MarshalTo(dAtA[i:])
+		n49, err := m.Header.MarshalTo(dAtA[i:])
 		if err != nil {
 			return 0, err
 		}
-		i += n48
+		i += n49
 	}
 	return i, nil
 }
@@ -7327,11 +7476,11 @@ func (m *AuthRoleAddResponse) MarshalTo(dAtA []byte) (int, error) {
 		dAtA[i] = 0xa
 		i++
 		i = encodeVarintRpc(dAtA, i, uint64(m.Header.Size()))
-		n49, err := m.Header.MarshalTo(dAtA[i:])
+		n50, err := m.Header.MarshalTo(dAtA[i:])
 		if err != nil {
 			return 0, err
 		}
-		i += n49
+		i += n50
 	}
 	return i, nil
 }
@@ -7355,11 +7504,11 @@ func (m *AuthRoleGetResponse) MarshalTo(dAtA []byte) (int, error) {
 		dAtA[i] = 0xa
 		i++
 		i = encodeVarintRpc(dAtA, i, uint64(m.Header.Size()))
-		n50, err := m.Header.MarshalTo(dAtA[i:])
+		n51, err := m.Header.MarshalTo(dAtA[i:])
 		if err != nil {
 			return 0, err
 		}
-		i += n50
+		i += n51
 	}
 	if len(m.Perm) > 0 {
 		for _, msg := range m.Perm {
@@ -7395,11 +7544,11 @@ func (m *AuthRoleListResponse) MarshalTo(dAtA []byte) (int, error) {
 		dAtA[i] = 0xa
 		i++
 		i = encodeVarintRpc(dAtA, i, uint64(m.Header.Size()))
-		n51, err := m.Header.MarshalTo(dAtA[i:])
+		n52, err := m.Header.MarshalTo(dAtA[i:])
 		if err != nil {
 			return 0, err
 		}
-		i += n51
+		i += n52
 	}
 	if len(m.Roles) > 0 {
 		for _, s := range m.Roles {
@@ -7438,11 +7587,11 @@ func (m *AuthUserListResponse) MarshalTo(dAtA []byte) (int, error) {
 		dAtA[i] = 0xa
 		i++
 		i = encodeVarintRpc(dAtA, i, uint64(m.Header.Size()))
-		n52, err := m.Header.MarshalTo(dAtA[i:])
+		n53, err := m.Header.MarshalTo(dAtA[i:])
 		if err != nil {
 			return 0, err
 		}
-		i += n52
+		i += n53
 	}
 	if len(m.Users) > 0 {
 		for _, s := range m.Users {
@@ -7481,11 +7630,11 @@ func (m *AuthRoleDeleteResponse) MarshalTo(dAtA []byte) (int, error) {
 		dAtA[i] = 0xa
 		i++
 		i = encodeVarintRpc(dAtA, i, uint64(m.Header.Size()))
-		n53, err := m.Header.MarshalTo(dAtA[i:])
+		n54, err := m.Header.MarshalTo(dAtA[i:])
 		if err != nil {
 			return 0, err
 		}
-		i += n53
+		i += n54
 	}
 	return i, nil
 }
@@ -7509,11 +7658,11 @@ func (m *AuthRoleGrantPermissionResponse) MarshalTo(dAtA []byte) (int, error) {
 		dAtA[i] = 0xa
 		i++
 		i = encodeVarintRpc(dAtA, i, uint64(m.Header.Size()))
-		n54, err := m.Header.MarshalTo(dAtA[i:])
+		n55, err := m.Header.MarshalTo(dAtA[i:])
 		if err != nil {
 			return 0, err
 		}
-		i += n54
+		i += n55
 	}
 	return i, nil
 }
@@ -7537,11 +7686,11 @@ func (m *AuthRoleRevokePermissionResponse) MarshalTo(dAtA []byte) (int, error) {
 		dAtA[i] = 0xa
 		i++
 		i = encodeVarintRpc(dAtA, i, uint64(m.Header.Size()))
-		n55, err := m.Header.MarshalTo(dAtA[i:])
+		n56, err := m.Header.MarshalTo(dAtA[i:])
 		if err != nil {
 			return 0, err
 		}
-		i += n55
+		i += n56
 	}
 	return i, nil
 }
@@ -7947,6 +8096,31 @@ func (m *HashRequest) Size() (n int) {
 	return n
 }
 
+func (m *HashKVRequest) Size() (n int) {
+	var l int
+	_ = l
+	if m.Revision != 0 {
+		n += 1 + sovRpc(uint64(m.Revision))
+	}
+	return n
+}
+
+func (m *HashKVResponse) Size() (n int) {
+	var l int
+	_ = l
+	if m.Header != nil {
+		l = m.Header.Size()
+		n += 1 + l + sovRpc(uint64(l))
+	}
+	if m.Hash != 0 {
+		n += 1 + sovRpc(uint64(m.Hash))
+	}
+	if m.CompactRevision != 0 {
+		n += 1 + sovRpc(uint64(m.CompactRevision))
+	}
+	return n
+}
+
 func (m *HashResponse) Size() (n int) {
 	var l int
 	_ = l
@@ -11086,6 +11260,196 @@ func (m *HashRequest) Unmarshal(dAtA []byte) error {
 	}
 	return nil
 }
+func (m *HashKVRequest) Unmarshal(dAtA []byte) error {
+	l := len(dAtA)
+	iNdEx := 0
+	for iNdEx < l {
+		preIndex := iNdEx
+		var wire uint64
+		for shift := uint(0); ; shift += 7 {
+			if shift >= 64 {
+				return ErrIntOverflowRpc
+			}
+			if iNdEx >= l {
+				return io.ErrUnexpectedEOF
+			}
+			b := dAtA[iNdEx]
+			iNdEx++
+			wire |= (uint64(b) & 0x7F) << shift
+			if b < 0x80 {
+				break
+			}
+		}
+		fieldNum := int32(wire >> 3)
+		wireType := int(wire & 0x7)
+		if wireType == 4 {
+			return fmt.Errorf("proto: HashKVRequest: wiretype end group for non-group")
+		}
+		if fieldNum <= 0 {
+			return fmt.Errorf("proto: HashKVRequest: illegal tag %d (wire type %d)", fieldNum, wire)
+		}
+		switch fieldNum {
+		case 1:
+			if wireType != 0 {
+				return fmt.Errorf("proto: wrong wireType = %d for field Revision", wireType)
+			}
+			m.Revision = 0
+			for shift := uint(0); ; shift += 7 {
+				if shift >= 64 {
+					return ErrIntOverflowRpc
+				}
+				if iNdEx >= l {
+					return io.ErrUnexpectedEOF
+				}
+				b := dAtA[iNdEx]
+				iNdEx++
+				m.Revision |= (int64(b) & 0x7F) << shift
+				if b < 0x80 {
+					break
+				}
+			}
+		default:
+			iNdEx = preIndex
+			skippy, err := skipRpc(dAtA[iNdEx:])
+			if err != nil {
+				return err
+			}
+			if skippy < 0 {
+				return ErrInvalidLengthRpc
+			}
+			if (iNdEx + skippy) > l {
+				return io.ErrUnexpectedEOF
+			}
+			iNdEx += skippy
+		}
+	}
+
+	if iNdEx > l {
+		return io.ErrUnexpectedEOF
+	}
+	return nil
+}
+func (m *HashKVResponse) Unmarshal(dAtA []byte) error {
+	l := len(dAtA)
+	iNdEx := 0
+	for iNdEx < l {
+		preIndex := iNdEx
+		var wire uint64
+		for shift := uint(0); ; shift += 7 {
+			if shift >= 64 {
+				return ErrIntOverflowRpc
+			}
+			if iNdEx >= l {
+				return io.ErrUnexpectedEOF
+			}
+			b := dAtA[iNdEx]
+			iNdEx++
+			wire |= (uint64(b) & 0x7F) << shift
+			if b < 0x80 {
+				break
+			}
+		}
+		fieldNum := int32(wire >> 3)
+		wireType := int(wire & 0x7)
+		if wireType == 4 {
+			return fmt.Errorf("proto: HashKVResponse: wiretype end group for non-group")
+		}
+		if fieldNum <= 0 {
+			return fmt.Errorf("proto: HashKVResponse: illegal tag %d (wire type %d)", fieldNum, wire)
+		}
+		switch fieldNum {
+		case 1:
+			if wireType != 2 {
+				return fmt.Errorf("proto: wrong wireType = %d for field Header", wireType)
+			}
+			var msglen int
+			for shift := uint(0); ; shift += 7 {
+				if shift >= 64 {
+					return ErrIntOverflowRpc
+				}
+				if iNdEx >= l {
+					return io.ErrUnexpectedEOF
+				}
+				b := dAtA[iNdEx]
+				iNdEx++
+				msglen |= (int(b) & 0x7F) << shift
+				if b < 0x80 {
+					break
+				}
+			}
+			if msglen < 0 {
+				return ErrInvalidLengthRpc
+			}
+			postIndex := iNdEx + msglen
+			if postIndex > l {
+				return io.ErrUnexpectedEOF
+			}
+			if m.Header == nil {
+				m.Header = &ResponseHeader{}
+			}
+			if err := m.Header.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
+				return err
+			}
+			iNdEx = postIndex
+		case 2:
+			if wireType != 0 {
+				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
+			}
+			m.Hash = 0
+			for shift := uint(0); ; shift += 7 {
+				if shift >= 64 {
+					return ErrIntOverflowRpc
+				}
+				if iNdEx >= l {
+					return io.ErrUnexpectedEOF
+				}
+				b := dAtA[iNdEx]
+				iNdEx++
+				m.Hash |= (uint32(b) & 0x7F) << shift
+				if b < 0x80 {
+					break
+				}
+			}
+		case 3:
+			if wireType != 0 {
+				return fmt.Errorf("proto: wrong wireType = %d for field CompactRevision", wireType)
+			}
+			m.CompactRevision = 0
+			for shift := uint(0); ; shift += 7 {
+				if shift >= 64 {
+					return ErrIntOverflowRpc
+				}
+				if iNdEx >= l {
+					return io.ErrUnexpectedEOF
+				}
+				b := dAtA[iNdEx]
+				iNdEx++
+				m.CompactRevision |= (int64(b) & 0x7F) << shift
+				if b < 0x80 {
+					break
+				}
+			}
+		default:
+			iNdEx = preIndex
+			skippy, err := skipRpc(dAtA[iNdEx:])
+			if err != nil {
+				return err
+			}
+			if skippy < 0 {
+				return ErrInvalidLengthRpc
+			}
+			if (iNdEx + skippy) > l {
+				return io.ErrUnexpectedEOF
+			}
+			iNdEx += skippy
+		}
+	}
+
+	if iNdEx > l {
+		return io.ErrUnexpectedEOF
+	}
+	return nil
+}
 func (m *HashResponse) Unmarshal(dAtA []byte) error {
 	l := len(dAtA)
 	iNdEx := 0
@@ -17586,227 +17950,230 @@ var (
 func init() { proto.RegisterFile("rpc.proto", fileDescriptorRpc) }
 
 var fileDescriptorRpc = []byte{
-	// 3549 bytes of a gzipped FileDescriptorProto
-	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x5b, 0x5f, 0x6f, 0x1b, 0xc7,
-	0xb5, 0xd7, 0x92, 0x22, 0x29, 0x1e, 0xfe, 0x11, 0x35, 0x92, 0x6d, 0x6a, 0x6d, 0xcb, 0xf2, 0xf8,
-	0x9f, 0x6c, 0xc7, 0x52, 0xa2, 0xe4, 0xde, 0x07, 0xdf, 0x20, 0xb8, 0xb2, 0xc4, 0x58, 0x8a, 0x64,
-	0xc9, 0x59, 0xc9, 0x4e, 0x2e, 0x10, 0x5c, 0x62, 0x45, 0x8e, 0xa5, 0x85, 0xc8, 0x5d, 0x66, 0x77,
-	0x49, 0x4b, 0x69, 0x0a, 0x14, 0x69, 0x82, 0xa2, 0x05, 0xfa, 0xd2, 0x3c, 0xf4, 0xdf, 0x63, 0x51,
-	0x14, 0xf9, 0x00, 0x45, 0x3f, 0x40, 0x81, 0xa2, 0xe8, 0x4b, 0x0b, 0xf4, 0x0b, 0x14, 0x69, 0xbf,
-	0x46, 0xd1, 0x62, 0xfe, 0xed, 0xce, 0x2e, 0x77, 0x25, 0x25, 0x6c, 0xf2, 0x62, 0xed, 0x9c, 0x39,
-	0x73, 0x7e, 0x67, 0xce, 0xcc, 0x39, 0x67, 0xe6, 0x0c, 0x0d, 0x45, 0xb7, 0xd7, 0x5a, 0xec, 0xb9,
-	0x8e, 0xef, 0xa0, 0x32, 0xf1, 0x5b, 0x6d, 0x8f, 0xb8, 0x03, 0xe2, 0xf6, 0xf6, 0xf5, 0x99, 0x03,
-	0xe7, 0xc0, 0x61, 0x1d, 0x4b, 0xf4, 0x8b, 0xf3, 0xe8, 0xb3, 0x94, 0x67, 0xa9, 0x3b, 0x68, 0xb5,
-	0xd8, 0x3f, 0xbd, 0xfd, 0xa5, 0xa3, 0x81, 0xe8, 0xba, 0xcc, 0xba, 0xcc, 0xbe, 0x7f, 0xc8, 0xfe,
-	0xe9, 0xed, 0xb3, 0x3f, 0xa2, 0xf3, 0xca, 0x81, 0xe3, 0x1c, 0x74, 0xc8, 0x92, 0xd9, 0xb3, 0x96,
-	0x4c, 0xdb, 0x76, 0x7c, 0xd3, 0xb7, 0x1c, 0xdb, 0xe3, 0xbd, 0xf8, 0x33, 0x0d, 0xaa, 0x06, 0xf1,
-	0x7a, 0x8e, 0xed, 0x91, 0x75, 0x62, 0xb6, 0x89, 0x8b, 0xae, 0x02, 0xb4, 0x3a, 0x7d, 0xcf, 0x27,
-	0x6e, 0xd3, 0x6a, 0xd7, 0xb5, 0x79, 0x6d, 0x61, 0xdc, 0x28, 0x0a, 0xca, 0x46, 0x1b, 0x5d, 0x86,
-	0x62, 0x97, 0x74, 0xf7, 0x79, 0x6f, 0x86, 0xf5, 0x4e, 0x70, 0xc2, 0x46, 0x1b, 0xe9, 0x30, 0xe1,
-	0x92, 0x81, 0xe5, 0x59, 0x8e, 0x5d, 0xcf, 0xce, 0x6b, 0x0b, 0x59, 0x23, 0x68, 0xd3, 0x81, 0xae,
-	0xf9, 0xc2, 0x6f, 0xfa, 0xc4, 0xed, 0xd6, 0xc7, 0xf9, 0x40, 0x4a, 0xd8, 0x23, 0x6e, 0x17, 0x7f,
-	0x9a, 0x83, 0xb2, 0x61, 0xda, 0x07, 0xc4, 0x20, 0x1f, 0xf6, 0x89, 0xe7, 0xa3, 0x1a, 0x64, 0x8f,
-	0xc8, 0x09, 0x83, 0x2f, 0x1b, 0xf4, 0x93, 0x8f, 0xb7, 0x0f, 0x48, 0x93, 0xd8, 0x1c, 0xb8, 0x4c,
-	0xc7, 0xdb, 0x07, 0xa4, 0x61, 0xb7, 0xd1, 0x0c, 0xe4, 0x3a, 0x56, 0xd7, 0xf2, 0x05, 0x2a, 0x6f,
-	0x44, 0xd4, 0x19, 0x8f, 0xa9, 0xb3, 0x0a, 0xe0, 0x39, 0xae, 0xdf, 0x74, 0xdc, 0x36, 0x71, 0xeb,
-	0xb9, 0x79, 0x6d, 0xa1, 0xba, 0x7c, 0x73, 0x51, 0x5d, 0x88, 0x45, 0x55, 0xa1, 0xc5, 0x5d, 0xc7,
-	0xf5, 0x77, 0x28, 0xaf, 0x51, 0xf4, 0xe4, 0x27, 0x7a, 0x1b, 0x4a, 0x4c, 0x88, 0x6f, 0xba, 0x07,
-	0xc4, 0xaf, 0xe7, 0x99, 0x94, 0x5b, 0x67, 0x48, 0xd9, 0x63, 0xcc, 0x06, 0x83, 0xe7, 0xdf, 0x08,
-	0x43, 0xd9, 0x23, 0xae, 0x65, 0x76, 0xac, 0x8f, 0xcc, 0xfd, 0x0e, 0xa9, 0x17, 0xe6, 0xb5, 0x85,
-	0x09, 0x23, 0x42, 0xa3, 0xf3, 0x3f, 0x22, 0x27, 0x5e, 0xd3, 0xb1, 0x3b, 0x27, 0xf5, 0x09, 0xc6,
-	0x30, 0x41, 0x09, 0x3b, 0x76, 0xe7, 0x84, 0x2d, 0x9a, 0xd3, 0xb7, 0x7d, 0xde, 0x5b, 0x64, 0xbd,
-	0x45, 0x46, 0x61, 0xdd, 0x0b, 0x50, 0xeb, 0x5a, 0x76, 0xb3, 0xeb, 0xb4, 0x9b, 0x81, 0x41, 0x80,
-	0x19, 0xa4, 0xda, 0xb5, 0xec, 0x27, 0x4e, 0xdb, 0x90, 0x66, 0xa1, 0x9c, 0xe6, 0x71, 0x94, 0xb3,
-	0x24, 0x38, 0xcd, 0x63, 0x95, 0x73, 0x11, 0xa6, 0xa9, 0xcc, 0x96, 0x4b, 0x4c, 0x9f, 0x84, 0xcc,
-	0x65, 0xc6, 0x3c, 0xd5, 0xb5, 0xec, 0x55, 0xd6, 0x13, 0xe1, 0x37, 0x8f, 0x87, 0xf8, 0x2b, 0x82,
-	0xdf, 0x3c, 0x8e, 0xf2, 0xe3, 0x45, 0x28, 0x06, 0x36, 0x47, 0x13, 0x30, 0xbe, 0xbd, 0xb3, 0xdd,
-	0xa8, 0x8d, 0x21, 0x80, 0xfc, 0xca, 0xee, 0x6a, 0x63, 0x7b, 0xad, 0xa6, 0xa1, 0x12, 0x14, 0xd6,
-	0x1a, 0xbc, 0x91, 0xc1, 0x8f, 0x00, 0x42, 0xeb, 0xa2, 0x02, 0x64, 0x37, 0x1b, 0xff, 0x57, 0x1b,
-	0xa3, 0x3c, 0xcf, 0x1b, 0xc6, 0xee, 0xc6, 0xce, 0x76, 0x4d, 0xa3, 0x83, 0x57, 0x8d, 0xc6, 0xca,
-	0x5e, 0xa3, 0x96, 0xa1, 0x1c, 0x4f, 0x76, 0xd6, 0x6a, 0x59, 0x54, 0x84, 0xdc, 0xf3, 0x95, 0xad,
-	0x67, 0x8d, 0xda, 0x38, 0xfe, 0x5c, 0x83, 0x8a, 0x58, 0x2f, 0xee, 0x13, 0xe8, 0x0d, 0xc8, 0x1f,
-	0x32, 0xbf, 0x60, 0x5b, 0xb1, 0xb4, 0x7c, 0x25, 0xb6, 0xb8, 0x11, 0xdf, 0x31, 0x04, 0x2f, 0xc2,
-	0x90, 0x3d, 0x1a, 0x78, 0xf5, 0xcc, 0x7c, 0x76, 0xa1, 0xb4, 0x5c, 0x5b, 0xe4, 0x0e, 0xbb, 0xb8,
-	0x49, 0x4e, 0x9e, 0x9b, 0x9d, 0x3e, 0x31, 0x68, 0x27, 0x42, 0x30, 0xde, 0x75, 0x5c, 0xc2, 0x76,
-	0xec, 0x84, 0xc1, 0xbe, 0xe9, 0x36, 0x66, 0x8b, 0x26, 0x76, 0x2b, 0x6f, 0xe0, 0x2f, 0x34, 0x80,
-	0xa7, 0x7d, 0x3f, 0xdd, 0x35, 0x66, 0x20, 0x37, 0xa0, 0x82, 0x85, 0x5b, 0xf0, 0x06, 0xf3, 0x09,
-	0x62, 0x7a, 0x24, 0xf0, 0x09, 0xda, 0x40, 0x97, 0xa0, 0xd0, 0x73, 0xc9, 0xa0, 0x79, 0x34, 0x60,
-	0x20, 0x13, 0x46, 0x9e, 0x36, 0x37, 0x07, 0xe8, 0x3a, 0x94, 0xad, 0x03, 0xdb, 0x71, 0x49, 0x93,
-	0xcb, 0xca, 0xb1, 0xde, 0x12, 0xa7, 0x31, 0xbd, 0x15, 0x16, 0x2e, 0x38, 0xaf, 0xb2, 0x6c, 0x51,
-	0x12, 0xb6, 0xa1, 0xc4, 0x54, 0x1d, 0xc9, 0x7c, 0x77, 0x43, 0x1d, 0x33, 0x6c, 0xd8, 0xb0, 0x09,
-	0x85, 0xd6, 0xf8, 0x03, 0x40, 0x6b, 0xa4, 0x43, 0x7c, 0x32, 0x4a, 0xf4, 0x50, 0x6c, 0x92, 0x55,
-	0x6d, 0x82, 0x7f, 0xa2, 0xc1, 0x74, 0x44, 0xfc, 0x48, 0xd3, 0xaa, 0x43, 0xa1, 0xcd, 0x84, 0x71,
-	0x0d, 0xb2, 0x86, 0x6c, 0xa2, 0xfb, 0x30, 0x21, 0x14, 0xf0, 0xea, 0xd9, 0x94, 0x4d, 0x53, 0xe0,
-	0x3a, 0x79, 0xf8, 0x8b, 0x0c, 0x14, 0xc5, 0x44, 0x77, 0x7a, 0x68, 0x05, 0x2a, 0x2e, 0x6f, 0x34,
-	0xd9, 0x7c, 0x84, 0x46, 0x7a, 0x7a, 0x10, 0x5a, 0x1f, 0x33, 0xca, 0x62, 0x08, 0x23, 0xa3, 0xff,
-	0x81, 0x92, 0x14, 0xd1, 0xeb, 0xfb, 0xc2, 0xe4, 0xf5, 0xa8, 0x80, 0x70, 0xff, 0xad, 0x8f, 0x19,
-	0x20, 0xd8, 0x9f, 0xf6, 0x7d, 0xb4, 0x07, 0x33, 0x72, 0x30, 0x9f, 0x8d, 0x50, 0x23, 0xcb, 0xa4,
-	0xcc, 0x47, 0xa5, 0x0c, 0x2f, 0xd5, 0xfa, 0x98, 0x81, 0xc4, 0x78, 0xa5, 0x53, 0x55, 0xc9, 0x3f,
-	0xe6, 0xc1, 0x7b, 0x48, 0xa5, 0xbd, 0x63, 0x7b, 0x58, 0xa5, 0xbd, 0x63, 0xfb, 0x51, 0x11, 0x0a,
-	0xa2, 0x85, 0x7f, 0x97, 0x01, 0x90, 0xab, 0xb1, 0xd3, 0x43, 0x6b, 0x50, 0x75, 0x45, 0x2b, 0x62,
-	0xad, 0xcb, 0x89, 0xd6, 0x12, 0x8b, 0x38, 0x66, 0x54, 0xe4, 0x20, 0xae, 0xdc, 0x5b, 0x50, 0x0e,
-	0xa4, 0x84, 0x06, 0x9b, 0x4d, 0x30, 0x58, 0x20, 0xa1, 0x24, 0x07, 0x50, 0x93, 0xbd, 0x07, 0x17,
-	0x82, 0xf1, 0x09, 0x36, 0xbb, 0x7e, 0x8a, 0xcd, 0x02, 0x81, 0xd3, 0x52, 0x82, 0x6a, 0x35, 0x55,
-	0xb1, 0xd0, 0x6c, 0xb3, 0x09, 0x66, 0x1b, 0x56, 0x8c, 0x1a, 0x0e, 0x68, 0xbe, 0xe4, 0x4d, 0xfc,
-	0x87, 0x2c, 0x14, 0x56, 0x9d, 0x6e, 0xcf, 0x74, 0xe9, 0x6a, 0xe4, 0x5d, 0xe2, 0xf5, 0x3b, 0x3e,
-	0x33, 0x57, 0x75, 0xf9, 0x46, 0x54, 0xa2, 0x60, 0x93, 0x7f, 0x0d, 0xc6, 0x6a, 0x88, 0x21, 0x74,
-	0xb0, 0x48, 0x8f, 0x99, 0x73, 0x0c, 0x16, 0xc9, 0x51, 0x0c, 0x91, 0x8e, 0x9c, 0x0d, 0x1d, 0x59,
-	0x87, 0xc2, 0x80, 0xb8, 0x61, 0x4a, 0x5f, 0x1f, 0x33, 0x24, 0x01, 0xdd, 0x85, 0xc9, 0x78, 0x7a,
-	0xc9, 0x09, 0x9e, 0x6a, 0x2b, 0x9a, 0x8d, 0x6e, 0x40, 0x39, 0x92, 0xe3, 0xf2, 0x82, 0xaf, 0xd4,
-	0x55, 0x52, 0xdc, 0x45, 0x19, 0x57, 0x69, 0x3e, 0x2e, 0xaf, 0x8f, 0xc9, 0xc8, 0x1a, 0x09, 0x26,
-	0x13, 0xd1, 0x60, 0x82, 0xff, 0x17, 0x2a, 0x11, 0x43, 0xd0, 0xfc, 0xd2, 0x78, 0xf7, 0xd9, 0xca,
-	0x16, 0x4f, 0x46, 0x8f, 0x59, 0xfe, 0x31, 0x6a, 0x1a, 0xcd, 0x69, 0x5b, 0x8d, 0xdd, 0xdd, 0x5a,
-	0x06, 0x55, 0xa0, 0xb8, 0xbd, 0xb3, 0xd7, 0xe4, 0x5c, 0x59, 0xfc, 0x66, 0x20, 0x41, 0x24, 0x33,
-	0x25, 0x87, 0x8d, 0x29, 0x39, 0x4c, 0x93, 0x39, 0x2c, 0x13, 0xe6, 0xb0, 0xec, 0xa3, 0x2a, 0x94,
-	0xb9, 0xf1, 0x9a, 0x7d, 0x9b, 0xe6, 0xd1, 0x5f, 0x69, 0x00, 0xa1, 0xab, 0xa0, 0x25, 0x28, 0xb4,
-	0xb8, 0xf0, 0xba, 0xc6, 0x22, 0xcd, 0x85, 0xc4, 0xf5, 0x30, 0x24, 0x17, 0x7a, 0x0d, 0x0a, 0x5e,
-	0xbf, 0xd5, 0x22, 0x9e, 0xcc, 0x67, 0x97, 0xe2, 0xc1, 0x4e, 0x84, 0x22, 0x43, 0xf2, 0xd1, 0x21,
-	0x2f, 0x4c, 0xab, 0xd3, 0x67, 0xd9, 0xed, 0xf4, 0x21, 0x82, 0x0f, 0xff, 0x5c, 0x83, 0x92, 0xb2,
-	0x33, 0xbf, 0x66, 0x84, 0xbd, 0x02, 0x45, 0xa6, 0x03, 0x69, 0x8b, 0x18, 0x3b, 0x61, 0x84, 0x04,
-	0xf4, 0xdf, 0x50, 0x94, 0xdb, 0x5b, 0x86, 0xd9, 0x7a, 0xb2, 0xd8, 0x9d, 0x9e, 0x11, 0xb2, 0xe2,
-	0x4d, 0x98, 0x62, 0x56, 0x69, 0xd1, 0x93, 0xb3, 0xb4, 0xa3, 0x7a, 0xb6, 0xd4, 0x62, 0x67, 0x4b,
-	0x1d, 0x26, 0x7a, 0x87, 0x27, 0x9e, 0xd5, 0x32, 0x3b, 0x42, 0x8b, 0xa0, 0x8d, 0xdf, 0x01, 0xa4,
-	0x0a, 0x1b, 0x65, 0xba, 0xb8, 0x02, 0xa5, 0x75, 0xd3, 0x3b, 0x14, 0x2a, 0xe1, 0xf7, 0xa1, 0xcc,
-	0x9b, 0x23, 0xd9, 0x10, 0xc1, 0xf8, 0xa1, 0xe9, 0x1d, 0x32, 0xc5, 0x2b, 0x06, 0xfb, 0xc6, 0x53,
-	0x30, 0xb9, 0x6b, 0x9b, 0x3d, 0xef, 0xd0, 0x91, 0x59, 0x80, 0xde, 0x1c, 0x6a, 0x21, 0x6d, 0x24,
-	0xc4, 0x3b, 0x30, 0xe9, 0x92, 0xae, 0x69, 0xd9, 0x96, 0x7d, 0xd0, 0xdc, 0x3f, 0xf1, 0x89, 0x27,
-	0x2e, 0x16, 0xd5, 0x80, 0xfc, 0x88, 0x52, 0xa9, 0x6a, 0xfb, 0x1d, 0x67, 0x5f, 0x84, 0x03, 0xf6,
-	0x8d, 0x7f, 0xab, 0x41, 0xf9, 0x3d, 0xd3, 0x6f, 0x49, 0x2b, 0xa0, 0x0d, 0xa8, 0x06, 0x41, 0x80,
-	0x51, 0x84, 0x2e, 0xb1, 0x54, 0xc4, 0xc6, 0xc8, 0x23, 0xa7, 0xcc, 0x22, 0x95, 0x96, 0x4a, 0x60,
-	0xa2, 0x4c, 0xbb, 0x45, 0x3a, 0x81, 0xa8, 0x4c, 0xba, 0x28, 0xc6, 0xa8, 0x8a, 0x52, 0x09, 0x8f,
-	0x26, 0xc3, 0x34, 0xcd, 0xdd, 0xf2, 0x17, 0x19, 0x40, 0xc3, 0x3a, 0x7c, 0xd5, 0x93, 0xcb, 0x2d,
-	0xa8, 0x7a, 0xbe, 0xe9, 0xfa, 0xcd, 0xd8, 0xb5, 0xab, 0xc2, 0xa8, 0x41, 0x20, 0xbb, 0x03, 0x93,
-	0x3d, 0xd7, 0x39, 0x70, 0x89, 0xe7, 0x35, 0x6d, 0xc7, 0xb7, 0x5e, 0x9c, 0x88, 0xc3, 0x5f, 0x55,
-	0x92, 0xb7, 0x19, 0x15, 0x35, 0xa0, 0xf0, 0xc2, 0xea, 0xf8, 0xc4, 0xf5, 0xea, 0xb9, 0xf9, 0xec,
-	0x42, 0x75, 0xf9, 0xfe, 0x59, 0x56, 0x5b, 0x7c, 0x9b, 0xf1, 0xef, 0x9d, 0xf4, 0x88, 0x21, 0xc7,
-	0xaa, 0x07, 0xaa, 0x7c, 0xe4, 0x40, 0x75, 0x0b, 0x20, 0xe4, 0xa7, 0x51, 0x6b, 0x7b, 0xe7, 0xe9,
-	0xb3, 0xbd, 0xda, 0x18, 0x2a, 0xc3, 0xc4, 0xf6, 0xce, 0x5a, 0x63, 0xab, 0x41, 0xe3, 0x1a, 0x5e,
-	0x92, 0xb6, 0x51, 0x6d, 0x88, 0x66, 0x61, 0xe2, 0x25, 0xa5, 0xca, 0x7b, 0x69, 0xd6, 0x28, 0xb0,
-	0xf6, 0x46, 0x1b, 0xff, 0x38, 0x03, 0x15, 0xb1, 0x0b, 0x46, 0xda, 0x8a, 0x2a, 0x44, 0x26, 0x02,
-	0x41, 0x4f, 0x6f, 0x7c, 0x77, 0xb4, 0xc5, 0x21, 0x51, 0x36, 0xa9, 0xbb, 0xf3, 0xc5, 0x26, 0x6d,
-	0x61, 0xd6, 0xa0, 0x8d, 0xee, 0x42, 0xad, 0xc5, 0xdd, 0x3d, 0x96, 0x93, 0x8c, 0x49, 0x41, 0x57,
-	0x52, 0x52, 0x25, 0xd8, 0x6d, 0xa6, 0x27, 0x72, 0x52, 0xd1, 0x28, 0xcb, 0x8d, 0x44, 0x69, 0xe8,
-	0x16, 0xe4, 0xc9, 0x80, 0xd8, 0xbe, 0x57, 0x2f, 0xb1, 0x00, 0x56, 0x91, 0xe7, 0xc4, 0x06, 0xa5,
-	0x1a, 0xa2, 0x13, 0xff, 0x17, 0x4c, 0xb1, 0xf3, 0xf8, 0x63, 0xd7, 0xb4, 0xd5, 0x8b, 0xc3, 0xde,
-	0xde, 0x96, 0x30, 0x1d, 0xfd, 0x44, 0x55, 0xc8, 0x6c, 0xac, 0x89, 0x89, 0x66, 0x36, 0xd6, 0xf0,
-	0x27, 0x1a, 0x20, 0x75, 0xdc, 0x48, 0xb6, 0x8c, 0x09, 0x97, 0xf0, 0xd9, 0x10, 0x7e, 0x06, 0x72,
-	0xc4, 0x75, 0x1d, 0x97, 0x59, 0xad, 0x68, 0xf0, 0x06, 0xbe, 0x29, 0x74, 0x30, 0xc8, 0xc0, 0x39,
-	0x0a, 0x1c, 0x83, 0x4b, 0xd3, 0x02, 0x55, 0x37, 0x61, 0x3a, 0xc2, 0x35, 0x52, 0x20, 0xbd, 0x03,
-	0x17, 0x98, 0xb0, 0x4d, 0x42, 0x7a, 0x2b, 0x1d, 0x6b, 0x90, 0x8a, 0xda, 0x83, 0x8b, 0x71, 0xc6,
-	0x6f, 0xd6, 0x46, 0xf8, 0x4d, 0x81, 0xb8, 0x67, 0x75, 0xc9, 0x9e, 0xb3, 0x95, 0xae, 0x1b, 0x8d,
-	0x8e, 0x47, 0xe4, 0xc4, 0x13, 0x19, 0x87, 0x7d, 0xe3, 0x5f, 0x6b, 0x70, 0x69, 0x68, 0xf8, 0x37,
-	0xbc, 0xaa, 0x73, 0x00, 0x07, 0x74, 0xfb, 0x90, 0x36, 0xed, 0xe0, 0x37, 0x59, 0x85, 0x12, 0xe8,
-	0x49, 0x03, 0x4c, 0x59, 0xe8, 0x79, 0x08, 0xf9, 0x27, 0xac, 0x88, 0xa4, 0xcc, 0x6a, 0x5c, 0xce,
-	0xca, 0x36, 0xbb, 0xfc, 0x6a, 0x5b, 0x34, 0xd8, 0x37, 0xcb, 0xaf, 0x84, 0xb8, 0xcf, 0x8c, 0x2d,
-	0x9e, 0xc7, 0x8b, 0x46, 0xd0, 0xa6, 0xe8, 0xad, 0x8e, 0x45, 0x6c, 0x9f, 0xf5, 0x8e, 0xb3, 0x5e,
-	0x85, 0x82, 0x17, 0xa1, 0xc6, 0x91, 0x56, 0xda, 0x6d, 0x25, 0x97, 0x07, 0xf2, 0xb4, 0xa8, 0x3c,
-	0xfc, 0x1b, 0x0d, 0xa6, 0x94, 0x01, 0x23, 0xd9, 0xee, 0x15, 0xc8, 0xf3, 0x52, 0x99, 0xc8, 0x23,
-	0x33, 0xd1, 0x51, 0x1c, 0xc6, 0x10, 0x3c, 0x68, 0x11, 0x0a, 0xfc, 0x4b, 0x1e, 0x56, 0x92, 0xd9,
-	0x25, 0x13, 0xbe, 0x05, 0xd3, 0x82, 0x44, 0xba, 0x4e, 0xd2, 0x36, 0x61, 0x06, 0xc5, 0x1f, 0xc3,
-	0x4c, 0x94, 0x6d, 0xa4, 0x29, 0x29, 0x4a, 0x66, 0xce, 0xa3, 0xe4, 0x8a, 0x54, 0xf2, 0x59, 0xaf,
-	0xad, 0xa4, 0xbd, 0xf8, 0xaa, 0xab, 0x2b, 0x92, 0x89, 0xad, 0x48, 0x30, 0x01, 0x29, 0xe2, 0x5b,
-	0x9d, 0xc0, 0xb4, 0xdc, 0x0e, 0x5b, 0x96, 0x17, 0x1c, 0x86, 0x3e, 0x02, 0xa4, 0x12, 0xbf, 0x6d,
-	0x85, 0xd6, 0xc8, 0x0b, 0xd7, 0x3c, 0xe8, 0x92, 0x20, 0xd4, 0xd3, 0x53, 0xa6, 0x4a, 0x1c, 0x29,
-	0x38, 0x2e, 0xc1, 0xd4, 0x13, 0x67, 0x40, 0xb6, 0x38, 0x35, 0x74, 0x19, 0x7e, 0xcb, 0x08, 0x96,
-	0x2d, 0x68, 0x53, 0x70, 0x75, 0xc0, 0x48, 0xe0, 0x7f, 0xd6, 0xa0, 0xbc, 0xd2, 0x31, 0xdd, 0xae,
-	0x04, 0x7e, 0x0b, 0xf2, 0xfc, 0xec, 0x2c, 0xee, 0xa2, 0xb7, 0xa3, 0x62, 0x54, 0x5e, 0xde, 0x58,
-	0xe1, 0x27, 0x6d, 0x31, 0x8a, 0x2a, 0x2e, 0xca, 0xd5, 0x6b, 0xb1, 0xf2, 0xf5, 0x1a, 0x7a, 0x00,
-	0x39, 0x93, 0x0e, 0x61, 0xd1, 0xac, 0x1a, 0xbf, 0xb5, 0x30, 0x69, 0xec, 0x9c, 0xc3, 0xb9, 0xf0,
-	0x1b, 0x50, 0x52, 0x10, 0xe8, 0x65, 0xec, 0x71, 0x43, 0x9c, 0x65, 0x56, 0x56, 0xf7, 0x36, 0x9e,
-	0xf3, 0x3b, 0x5a, 0x15, 0x60, 0xad, 0x11, 0xb4, 0x33, 0xf8, 0x7d, 0x31, 0x4a, 0xc4, 0x3b, 0x55,
-	0x1f, 0x2d, 0x4d, 0x9f, 0xcc, 0xb9, 0xf4, 0x39, 0x86, 0x8a, 0x98, 0xfe, 0x48, 0x1b, 0xf0, 0x35,
-	0xc8, 0x33, 0x79, 0x72, 0xff, 0xcd, 0x26, 0xc0, 0xca, 0x50, 0xc5, 0x19, 0xf1, 0x24, 0x54, 0x76,
-	0x7d, 0xd3, 0xef, 0x7b, 0x72, 0xff, 0xfd, 0x49, 0x83, 0xaa, 0xa4, 0x8c, 0x5a, 0x33, 0x93, 0xd7,
-	0x7d, 0x9e, 0x01, 0x82, 0xcb, 0xfe, 0x45, 0xc8, 0xb7, 0xf7, 0x77, 0xad, 0x8f, 0x64, 0x7d, 0x53,
-	0xb4, 0x28, 0xbd, 0xc3, 0x71, 0xf8, 0x23, 0x83, 0x68, 0xd1, 0xbb, 0xa1, 0x6b, 0xbe, 0xf0, 0x37,
-	0xec, 0x36, 0x39, 0x66, 0x47, 0xb0, 0x71, 0x23, 0x24, 0xb0, 0xeb, 0x9c, 0x78, 0x8c, 0x60, 0xe7,
-	0x2e, 0xf5, 0x71, 0x62, 0x1a, 0xa6, 0x56, 0xfa, 0xfe, 0x61, 0xc3, 0x36, 0xf7, 0x3b, 0x32, 0x62,
-	0xe1, 0x19, 0x40, 0x94, 0xb8, 0x66, 0x79, 0x2a, 0xb5, 0x01, 0xd3, 0x94, 0x4a, 0x6c, 0xdf, 0x6a,
-	0x29, 0xe1, 0x4d, 0x26, 0x31, 0x2d, 0x96, 0xc4, 0x4c, 0xcf, 0x7b, 0xe9, 0xb8, 0x6d, 0x31, 0xb5,
-	0xa0, 0x8d, 0xd7, 0xb8, 0xf0, 0x67, 0x5e, 0x24, 0x4d, 0x7d, 0x55, 0x29, 0x0b, 0xa1, 0x94, 0xc7,
-	0xc4, 0x3f, 0x45, 0x0a, 0xbe, 0x0f, 0x17, 0x24, 0xa7, 0xa8, 0x27, 0x9d, 0xc2, 0xbc, 0x03, 0x57,
-	0x25, 0xf3, 0xea, 0x21, 0xbd, 0x88, 0x3c, 0x15, 0x80, 0x5f, 0x57, 0xcf, 0x47, 0x50, 0x0f, 0xf4,
-	0x64, 0xe7, 0x4e, 0xa7, 0xa3, 0x2a, 0xd0, 0xf7, 0xc4, 0x9e, 0x29, 0x1a, 0xec, 0x9b, 0xd2, 0x5c,
-	0xa7, 0x13, 0x1c, 0x09, 0xe8, 0x37, 0x5e, 0x85, 0x59, 0x29, 0x43, 0x9c, 0x08, 0xa3, 0x42, 0x86,
-	0x14, 0x4a, 0x12, 0x22, 0x0c, 0x46, 0x87, 0x9e, 0x6e, 0x76, 0x95, 0x33, 0x6a, 0x5a, 0x26, 0x53,
-	0x53, 0x64, 0x5e, 0xe0, 0x3b, 0x82, 0x2a, 0xa6, 0x66, 0x0c, 0x41, 0xa6, 0x02, 0x54, 0xb2, 0x58,
-	0x08, 0x4a, 0x1e, 0x5a, 0x88, 0x21, 0xd1, 0x1f, 0xc0, 0x5c, 0xa0, 0x04, 0xb5, 0xdb, 0x53, 0xe2,
-	0x76, 0x2d, 0xcf, 0x53, 0x8a, 0x14, 0x49, 0x13, 0xbf, 0x0d, 0xe3, 0x3d, 0x22, 0x62, 0x4a, 0x69,
-	0x19, 0x2d, 0xf2, 0x27, 0xc3, 0x45, 0x65, 0x30, 0xeb, 0xc7, 0x6d, 0xb8, 0x26, 0xa5, 0x73, 0x8b,
-	0x26, 0x8a, 0x8f, 0x2b, 0x25, 0x2f, 0xb0, 0xdc, 0xac, 0xc3, 0x17, 0xd8, 0x2c, 0x5f, 0xfb, 0xa0,
-	0x5a, 0xf6, 0x0e, 0x37, 0xa4, 0xf4, 0xad, 0x91, 0x72, 0xc5, 0x26, 0xb7, 0x69, 0xe0, 0x92, 0x23,
-	0x09, 0xdb, 0x87, 0x99, 0xa8, 0x27, 0x8f, 0x14, 0xc6, 0x66, 0x20, 0xe7, 0x3b, 0x47, 0x44, 0x06,
-	0x31, 0xde, 0x90, 0x0a, 0x07, 0x6e, 0x3e, 0x92, 0xc2, 0x66, 0x28, 0x8c, 0x6d, 0xc9, 0x51, 0xf5,
-	0xa5, 0xab, 0x29, 0x0f, 0x5f, 0xbc, 0x81, 0xb7, 0xe1, 0x62, 0x3c, 0x4c, 0x8c, 0xa4, 0xf2, 0x73,
-	0xbe, 0x81, 0x93, 0x22, 0xc9, 0x48, 0x72, 0xdf, 0x0d, 0x83, 0x81, 0x12, 0x50, 0x46, 0x12, 0x69,
-	0x80, 0x9e, 0x14, 0x5f, 0xfe, 0x13, 0xfb, 0x35, 0x08, 0x37, 0x23, 0x09, 0xf3, 0x42, 0x61, 0xa3,
-	0x2f, 0x7f, 0x18, 0x23, 0xb2, 0xa7, 0xc6, 0x08, 0xe1, 0x24, 0x61, 0x14, 0xfb, 0x06, 0x36, 0x9d,
-	0xc0, 0x08, 0x03, 0xe8, 0xa8, 0x18, 0x34, 0x87, 0x04, 0x18, 0xac, 0x21, 0x37, 0xb6, 0x1a, 0x76,
-	0x47, 0x5a, 0x8c, 0xf7, 0xc2, 0xd8, 0x39, 0x14, 0x99, 0x47, 0x12, 0xfc, 0x3e, 0xcc, 0xa7, 0x07,
-	0xe5, 0x51, 0x24, 0xdf, 0xc3, 0x50, 0x0c, 0x0e, 0x94, 0xca, 0x73, 0x7b, 0x09, 0x0a, 0xdb, 0x3b,
-	0xbb, 0x4f, 0x57, 0x56, 0x1b, 0x35, 0x6d, 0xf9, 0x9f, 0x59, 0xc8, 0x6c, 0x3e, 0x47, 0xff, 0x0f,
-	0x39, 0xfe, 0xde, 0x74, 0xca, 0x23, 0xa3, 0x7e, 0xda, 0x93, 0x1a, 0xbe, 0xf2, 0xc9, 0x5f, 0xff,
-	0xf1, 0x79, 0xe6, 0x22, 0x9e, 0x5a, 0x1a, 0xbc, 0x6e, 0x76, 0x7a, 0x87, 0xe6, 0xd2, 0xd1, 0x60,
-	0x89, 0xe5, 0x84, 0x87, 0xda, 0x3d, 0xf4, 0x1c, 0xb2, 0x4f, 0xfb, 0x3e, 0x4a, 0x7d, 0x81, 0xd4,
-	0xd3, 0x9f, 0xda, 0xb0, 0xce, 0x24, 0xcf, 0xe0, 0x49, 0x55, 0x72, 0xaf, 0xef, 0x53, 0xb9, 0x03,
-	0x28, 0xa9, 0xaf, 0x65, 0x67, 0xbe, 0x4d, 0xea, 0x67, 0xbf, 0xc4, 0x61, 0xcc, 0xf0, 0xae, 0xe0,
-	0x4b, 0x2a, 0x1e, 0x7f, 0xd4, 0x53, 0xe7, 0xb3, 0x77, 0x6c, 0xa3, 0xd4, 0xe7, 0x4b, 0x3d, 0xfd,
-	0x85, 0x2e, 0x79, 0x3e, 0xfe, 0xb1, 0x4d, 0xe5, 0x3a, 0xe2, 0x85, 0xae, 0xe5, 0xa3, 0x6b, 0x09,
-	0x8f, 0x38, 0xea, 0x73, 0x85, 0x3e, 0x9f, 0xce, 0x20, 0x90, 0xae, 0x33, 0xa4, 0xcb, 0xf8, 0xa2,
-	0x8a, 0xd4, 0x0a, 0xf8, 0x1e, 0x6a, 0xf7, 0x96, 0x0f, 0x21, 0xc7, 0x8a, 0xac, 0xa8, 0x29, 0x3f,
-	0xf4, 0x84, 0xf2, 0x70, 0xca, 0x0e, 0x88, 0x94, 0x67, 0xf1, 0x2c, 0x43, 0x9b, 0xc6, 0xd5, 0x00,
-	0x8d, 0xd5, 0x59, 0x1f, 0x6a, 0xf7, 0x16, 0xb4, 0x57, 0xb5, 0xe5, 0xef, 0x8f, 0x43, 0x8e, 0xd5,
-	0xad, 0x50, 0x0f, 0x20, 0xac, 0x48, 0xc6, 0xe7, 0x39, 0x54, 0xe3, 0x8c, 0xcf, 0x73, 0xb8, 0x98,
-	0x89, 0xaf, 0x31, 0xe4, 0x59, 0x3c, 0x13, 0x20, 0xb3, 0x1f, 0x33, 0x2c, 0xb1, 0x0a, 0x15, 0x35,
-	0xeb, 0x4b, 0x28, 0x29, 0x95, 0x45, 0x94, 0x24, 0x31, 0x52, 0x9a, 0x8c, 0x6f, 0x93, 0x84, 0xb2,
-	0x24, 0xbe, 0xc1, 0x40, 0xaf, 0xe2, 0xba, 0x6a, 0x5c, 0x8e, 0xeb, 0x32, 0x4e, 0x0a, 0xfc, 0xa9,
-	0x06, 0xd5, 0x68, 0x75, 0x11, 0xdd, 0x48, 0x10, 0x1d, 0x2f, 0x52, 0xea, 0x37, 0x4f, 0x67, 0x4a,
-	0x55, 0x81, 0xe3, 0x1f, 0x11, 0xd2, 0x33, 0x29, 0xa7, 0xb0, 0x3d, 0xfa, 0x81, 0x06, 0x93, 0xb1,
-	0x9a, 0x21, 0x4a, 0x82, 0x18, 0xaa, 0x48, 0xea, 0xb7, 0xce, 0xe0, 0x12, 0x9a, 0xdc, 0x61, 0x9a,
-	0x5c, 0xc7, 0x57, 0x86, 0x8d, 0xe1, 0x5b, 0x5d, 0xe2, 0x3b, 0x42, 0x9b, 0xe5, 0x7f, 0x65, 0xa1,
-	0xb0, 0xca, 0x7f, 0x79, 0x86, 0x7c, 0x28, 0x06, 0x65, 0x38, 0x34, 0x97, 0x54, 0x12, 0x09, 0x8f,
-	0xec, 0xfa, 0xb5, 0xd4, 0x7e, 0xa1, 0xc2, 0x6d, 0xa6, 0xc2, 0x3c, 0xbe, 0x1c, 0xa8, 0x20, 0x7e,
-	0xe1, 0xb6, 0xc4, 0x2f, 0xdf, 0x4b, 0x66, 0xbb, 0x4d, 0x97, 0xe4, 0x7b, 0x1a, 0x94, 0xd5, 0x6a,
-	0x19, 0xba, 0x9e, 0x58, 0x8c, 0x51, 0x0b, 0x6e, 0x3a, 0x3e, 0x8d, 0x45, 0xe0, 0xdf, 0x65, 0xf8,
-	0x37, 0xf0, 0x5c, 0x1a, 0xbe, 0xcb, 0xf8, 0xa3, 0x2a, 0xf0, 0x7a, 0x57, 0xb2, 0x0a, 0x91, 0x72,
-	0x5a, 0xb2, 0x0a, 0xd1, 0x72, 0xd9, 0xd9, 0x2a, 0xf4, 0x19, 0x3f, 0x55, 0xe1, 0x18, 0x20, 0x2c,
-	0x6f, 0xa1, 0x44, 0xe3, 0x2a, 0x97, 0x98, 0xb8, 0x0f, 0x0e, 0x57, 0xc6, 0x12, 0x76, 0x40, 0x0c,
-	0xbb, 0x63, 0x79, 0xd4, 0x17, 0x97, 0x7f, 0x9f, 0x83, 0xd2, 0x13, 0xd3, 0xb2, 0x7d, 0x62, 0x9b,
-	0x76, 0x8b, 0xa0, 0x03, 0xc8, 0xb1, 0x2c, 0x15, 0x0f, 0x3c, 0x6a, 0xd9, 0x27, 0x1e, 0x78, 0x22,
-	0x35, 0x11, 0x7c, 0x8b, 0x41, 0x5f, 0xc3, 0x7a, 0x00, 0xdd, 0x0d, 0xe5, 0x2f, 0xb1, 0x7a, 0x06,
-	0x9d, 0xf2, 0x11, 0xe4, 0x79, 0xfd, 0x02, 0xc5, 0xa4, 0x45, 0xea, 0x1c, 0xfa, 0x95, 0xe4, 0xce,
-	0xd4, 0x5d, 0xa6, 0x62, 0x79, 0x8c, 0x99, 0x82, 0x7d, 0x07, 0x20, 0xac, 0xd6, 0xc5, 0xed, 0x3b,
-	0x54, 0xdc, 0xd3, 0xe7, 0xd3, 0x19, 0x04, 0xf0, 0x3d, 0x06, 0x7c, 0x13, 0x5f, 0x4b, 0x04, 0x6e,
-	0x07, 0x03, 0x28, 0x78, 0x0b, 0xc6, 0xd7, 0x4d, 0xef, 0x10, 0xc5, 0x92, 0x90, 0xf2, 0xb0, 0xac,
-	0xeb, 0x49, 0x5d, 0x02, 0xea, 0x26, 0x83, 0x9a, 0xc3, 0xb3, 0x89, 0x50, 0x87, 0xa6, 0x47, 0x63,
-	0x3a, 0xea, 0xc3, 0x84, 0x7c, 0x2c, 0x46, 0x57, 0x63, 0x36, 0x8b, 0x3e, 0x2c, 0xeb, 0x73, 0x69,
-	0xdd, 0x02, 0x70, 0x81, 0x01, 0x62, 0x7c, 0x35, 0xd9, 0xa8, 0x82, 0xfd, 0xa1, 0x76, 0xef, 0x55,
-	0x8d, 0x46, 0x54, 0x08, 0x4b, 0x91, 0x43, 0x3b, 0x37, 0x5e, 0xd5, 0x1c, 0xda, 0xb9, 0x43, 0x55,
-	0x4c, 0xfc, 0x3a, 0x43, 0x7f, 0x80, 0x17, 0x12, 0xd1, 0x7d, 0xd7, 0xb4, 0xbd, 0x17, 0xc4, 0x7d,
-	0xc0, 0x6b, 0x4e, 0xde, 0xa1, 0xd5, 0xa3, 0xbb, 0xf8, 0x47, 0x35, 0x18, 0xa7, 0xc7, 0x36, 0x9a,
-	0xcc, 0xc2, 0xdb, 0x6e, 0x5c, 0x9d, 0xa1, 0x1a, 0x53, 0x5c, 0x9d, 0xe1, 0x8b, 0x72, 0x42, 0x32,
-	0x63, 0x3f, 0x03, 0x26, 0x8c, 0x8b, 0x1a, 0xde, 0x87, 0x92, 0x72, 0x27, 0x46, 0x09, 0x12, 0xa3,
-	0x15, 0xac, 0x78, 0x32, 0x4b, 0xb8, 0x50, 0xe3, 0x79, 0x06, 0xaa, 0xe3, 0x0b, 0x51, 0xd0, 0x36,
-	0x67, 0xa3, 0xa8, 0x1f, 0x43, 0x59, 0xbd, 0x3c, 0xa3, 0x04, 0xa1, 0xb1, 0x12, 0x59, 0x3c, 0x64,
-	0x25, 0xdd, 0xbd, 0x13, 0x7c, 0x37, 0xf8, 0xd1, 0xb3, 0xe4, 0xa5, 0xe8, 0x1f, 0x42, 0x41, 0x5c,
-	0xa9, 0x93, 0xe6, 0x1b, 0x2d, 0xaa, 0x25, 0xcd, 0x37, 0x76, 0x1f, 0x4f, 0x38, 0x19, 0x31, 0x58,
-	0x7a, 0x75, 0x90, 0x79, 0x42, 0x40, 0x3e, 0x26, 0x7e, 0x1a, 0x64, 0x58, 0x26, 0x4a, 0x83, 0x54,
-	0xae, 0x6d, 0xa7, 0x42, 0x1e, 0x10, 0x5f, 0xb8, 0x94, 0xbc, 0x13, 0xa1, 0x14, 0x89, 0x6a, 0x50,
-	0xc6, 0xa7, 0xb1, 0xa4, 0x1e, 0x66, 0x43, 0x54, 0x11, 0x91, 0xd1, 0x77, 0x01, 0xc2, 0xfb, 0x7f,
-	0xfc, 0x7c, 0x92, 0x58, 0x44, 0x8c, 0x9f, 0x4f, 0x92, 0x4b, 0x08, 0x09, 0x81, 0x24, 0x04, 0xe7,
-	0x07, 0x6a, 0x0a, 0xff, 0x53, 0x0d, 0xd0, 0x70, 0xbd, 0x00, 0xdd, 0x4f, 0x86, 0x48, 0xac, 0x4f,
-	0xea, 0xaf, 0x9c, 0x8f, 0x39, 0x35, 0x88, 0x87, 0x7a, 0xb5, 0xd8, 0x90, 0xde, 0x4b, 0xaa, 0xd9,
-	0x67, 0x1a, 0x54, 0x22, 0x15, 0x07, 0x74, 0x3b, 0x65, 0x9d, 0x63, 0x35, 0x4e, 0xfd, 0xce, 0x99,
-	0x7c, 0xa9, 0x47, 0x38, 0x65, 0x57, 0xc8, 0xe3, 0xeb, 0x0f, 0x35, 0xa8, 0x46, 0xcb, 0x14, 0x28,
-	0x05, 0x60, 0xa8, 0x50, 0xaa, 0x2f, 0x9c, 0xcd, 0x78, 0x8e, 0xd5, 0x0a, 0x4f, 0xb4, 0x1f, 0x42,
-	0x41, 0x54, 0x37, 0x92, 0xdc, 0x22, 0x5a, 0x67, 0x4d, 0x72, 0x8b, 0x58, 0x69, 0x24, 0xcd, 0x2d,
-	0x5c, 0xa7, 0x43, 0x14, 0x4f, 0x14, 0x35, 0x90, 0x34, 0xc8, 0xd3, 0x3d, 0x31, 0x56, 0x40, 0x39,
-	0x15, 0x32, 0xf4, 0x44, 0x59, 0x01, 0x41, 0x29, 0x12, 0xcf, 0xf0, 0xc4, 0x78, 0x01, 0x25, 0xcd,
-	0x13, 0x19, 0xaa, 0xe2, 0x89, 0x61, 0xc1, 0x22, 0xc9, 0x13, 0x87, 0xaa, 0xc8, 0x49, 0x9e, 0x38,
-	0x5c, 0xf3, 0x48, 0x5b, 0x5b, 0x06, 0x1e, 0xf1, 0xc4, 0xe9, 0x84, 0x02, 0x07, 0x7a, 0x25, 0xc5,
-	0xa6, 0x89, 0x15, 0x6a, 0xfd, 0xc1, 0x39, 0xb9, 0x4f, 0xf7, 0x00, 0xbe, 0x1a, 0xd2, 0x03, 0x7e,
-	0xa9, 0xc1, 0x4c, 0x52, 0x85, 0x04, 0xa5, 0x80, 0xa5, 0x94, 0xb7, 0xf5, 0xc5, 0xf3, 0xb2, 0x9f,
-	0xc3, 0x6e, 0x81, 0x4f, 0x3c, 0xaa, 0xfd, 0xf1, 0xcb, 0x39, 0xed, 0x2f, 0x5f, 0xce, 0x69, 0x7f,
-	0xfb, 0x72, 0x4e, 0xfb, 0xd9, 0xdf, 0xe7, 0xc6, 0xf6, 0xf3, 0xec, 0xff, 0xe2, 0xbc, 0xfe, 0xef,
-	0x00, 0x00, 0x00, 0xff, 0xff, 0x2b, 0x2a, 0x70, 0xa1, 0x12, 0x34, 0x00, 0x00,
+	// 3587 bytes of a gzipped FileDescriptorProto
+	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x5b, 0xdd, 0x6f, 0x1b, 0xc7,
+	0x11, 0xd7, 0x91, 0x22, 0x29, 0x0e, 0x3f, 0x44, 0xad, 0x64, 0x9b, 0xa2, 0x6d, 0x59, 0x5e, 0x7f,
+	0xc9, 0x76, 0x2c, 0x25, 0x4a, 0xda, 0x07, 0x37, 0x08, 0x2a, 0x4b, 0x8c, 0xa5, 0x48, 0x96, 0x9c,
+	0x93, 0xac, 0xa4, 0x40, 0x50, 0xe2, 0x44, 0xae, 0xa5, 0x83, 0xc8, 0x3b, 0xe6, 0xee, 0x48, 0x4b,
+	0x69, 0x0a, 0x14, 0x69, 0x82, 0xa2, 0x05, 0xfa, 0xd2, 0x3c, 0xf4, 0xeb, 0xb1, 0x28, 0x8a, 0xbc,
+	0xf4, 0xad, 0xe8, 0x7f, 0x50, 0x14, 0x7d, 0x69, 0x81, 0xfe, 0x03, 0x45, 0xda, 0x7f, 0xa3, 0x68,
+	0xb1, 0x5f, 0x77, 0x7b, 0xc7, 0x3b, 0x4a, 0x09, 0x93, 0xbc, 0x58, 0xb7, 0xb3, 0xb3, 0xf3, 0x9b,
+	0x9d, 0xdd, 0x99, 0xd9, 0x9d, 0xa5, 0x21, 0xef, 0x74, 0x9b, 0x8b, 0x5d, 0xc7, 0xf6, 0x6c, 0x54,
+	0x24, 0x5e, 0xb3, 0xe5, 0x12, 0xa7, 0x4f, 0x9c, 0xee, 0x41, 0x6d, 0xe6, 0xd0, 0x3e, 0xb4, 0x59,
+	0xc7, 0x12, 0xfd, 0xe2, 0x3c, 0xb5, 0x59, 0xca, 0xb3, 0xd4, 0xe9, 0x37, 0x9b, 0xec, 0x9f, 0xee,
+	0xc1, 0xd2, 0x71, 0x5f, 0x74, 0x5d, 0x66, 0x5d, 0x46, 0xcf, 0x3b, 0x62, 0xff, 0x74, 0x0f, 0xd8,
+	0x1f, 0xd1, 0x79, 0xe5, 0xd0, 0xb6, 0x0f, 0xdb, 0x64, 0xc9, 0xe8, 0x9a, 0x4b, 0x86, 0x65, 0xd9,
+	0x9e, 0xe1, 0x99, 0xb6, 0xe5, 0xf2, 0x5e, 0xfc, 0x89, 0x06, 0x65, 0x9d, 0xb8, 0x5d, 0xdb, 0x72,
+	0xc9, 0x3a, 0x31, 0x5a, 0xc4, 0x41, 0x57, 0x01, 0x9a, 0xed, 0x9e, 0xeb, 0x11, 0xa7, 0x61, 0xb6,
+	0xaa, 0xda, 0xbc, 0xb6, 0x30, 0xae, 0xe7, 0x05, 0x65, 0xa3, 0x85, 0x2e, 0x43, 0xbe, 0x43, 0x3a,
+	0x07, 0xbc, 0x37, 0xc5, 0x7a, 0x27, 0x38, 0x61, 0xa3, 0x85, 0x6a, 0x30, 0xe1, 0x90, 0xbe, 0xe9,
+	0x9a, 0xb6, 0x55, 0x4d, 0xcf, 0x6b, 0x0b, 0x69, 0xdd, 0x6f, 0xd3, 0x81, 0x8e, 0xf1, 0xdc, 0x6b,
+	0x78, 0xc4, 0xe9, 0x54, 0xc7, 0xf9, 0x40, 0x4a, 0xd8, 0x23, 0x4e, 0x07, 0x7f, 0x9c, 0x81, 0xa2,
+	0x6e, 0x58, 0x87, 0x44, 0x27, 0xef, 0xf7, 0x88, 0xeb, 0xa1, 0x0a, 0xa4, 0x8f, 0xc9, 0x29, 0x83,
+	0x2f, 0xea, 0xf4, 0x93, 0x8f, 0xb7, 0x0e, 0x49, 0x83, 0x58, 0x1c, 0xb8, 0x48, 0xc7, 0x5b, 0x87,
+	0xa4, 0x6e, 0xb5, 0xd0, 0x0c, 0x64, 0xda, 0x66, 0xc7, 0xf4, 0x04, 0x2a, 0x6f, 0x84, 0xd4, 0x19,
+	0x8f, 0xa8, 0xb3, 0x0a, 0xe0, 0xda, 0x8e, 0xd7, 0xb0, 0x9d, 0x16, 0x71, 0xaa, 0x99, 0x79, 0x6d,
+	0xa1, 0xbc, 0x7c, 0x73, 0x51, 0x5d, 0x88, 0x45, 0x55, 0xa1, 0xc5, 0x5d, 0xdb, 0xf1, 0x76, 0x28,
+	0xaf, 0x9e, 0x77, 0xe5, 0x27, 0x7a, 0x13, 0x0a, 0x4c, 0x88, 0x67, 0x38, 0x87, 0xc4, 0xab, 0x66,
+	0x99, 0x94, 0x5b, 0x67, 0x48, 0xd9, 0x63, 0xcc, 0x3a, 0x83, 0xe7, 0xdf, 0x08, 0x43, 0xd1, 0x25,
+	0x8e, 0x69, 0xb4, 0xcd, 0x0f, 0x8c, 0x83, 0x36, 0xa9, 0xe6, 0xe6, 0xb5, 0x85, 0x09, 0x3d, 0x44,
+	0xa3, 0xf3, 0x3f, 0x26, 0xa7, 0x6e, 0xc3, 0xb6, 0xda, 0xa7, 0xd5, 0x09, 0xc6, 0x30, 0x41, 0x09,
+	0x3b, 0x56, 0xfb, 0x94, 0x2d, 0x9a, 0xdd, 0xb3, 0x3c, 0xde, 0x9b, 0x67, 0xbd, 0x79, 0x46, 0x61,
+	0xdd, 0x0b, 0x50, 0xe9, 0x98, 0x56, 0xa3, 0x63, 0xb7, 0x1a, 0xbe, 0x41, 0x80, 0x19, 0xa4, 0xdc,
+	0x31, 0xad, 0x27, 0x76, 0x4b, 0x97, 0x66, 0xa1, 0x9c, 0xc6, 0x49, 0x98, 0xb3, 0x20, 0x38, 0x8d,
+	0x13, 0x95, 0x73, 0x11, 0xa6, 0xa9, 0xcc, 0xa6, 0x43, 0x0c, 0x8f, 0x04, 0xcc, 0x45, 0xc6, 0x3c,
+	0xd5, 0x31, 0xad, 0x55, 0xd6, 0x13, 0xe2, 0x37, 0x4e, 0x06, 0xf8, 0x4b, 0x82, 0xdf, 0x38, 0x09,
+	0xf3, 0xe3, 0x45, 0xc8, 0xfb, 0x36, 0x47, 0x13, 0x30, 0xbe, 0xbd, 0xb3, 0x5d, 0xaf, 0x8c, 0x21,
+	0x80, 0xec, 0xca, 0xee, 0x6a, 0x7d, 0x7b, 0xad, 0xa2, 0xa1, 0x02, 0xe4, 0xd6, 0xea, 0xbc, 0x91,
+	0xc2, 0x8f, 0x00, 0x02, 0xeb, 0xa2, 0x1c, 0xa4, 0x37, 0xeb, 0xdf, 0xab, 0x8c, 0x51, 0x9e, 0xfd,
+	0xba, 0xbe, 0xbb, 0xb1, 0xb3, 0x5d, 0xd1, 0xe8, 0xe0, 0x55, 0xbd, 0xbe, 0xb2, 0x57, 0xaf, 0xa4,
+	0x28, 0xc7, 0x93, 0x9d, 0xb5, 0x4a, 0x1a, 0xe5, 0x21, 0xb3, 0xbf, 0xb2, 0xf5, 0xac, 0x5e, 0x19,
+	0xc7, 0x9f, 0x6a, 0x50, 0x12, 0xeb, 0xc5, 0x7d, 0x02, 0xbd, 0x06, 0xd9, 0x23, 0xe6, 0x17, 0x6c,
+	0x2b, 0x16, 0x96, 0xaf, 0x44, 0x16, 0x37, 0xe4, 0x3b, 0xba, 0xe0, 0x45, 0x18, 0xd2, 0xc7, 0x7d,
+	0xb7, 0x9a, 0x9a, 0x4f, 0x2f, 0x14, 0x96, 0x2b, 0x8b, 0xdc, 0x61, 0x17, 0x37, 0xc9, 0xe9, 0xbe,
+	0xd1, 0xee, 0x11, 0x9d, 0x76, 0x22, 0x04, 0xe3, 0x1d, 0xdb, 0x21, 0x6c, 0xc7, 0x4e, 0xe8, 0xec,
+	0x9b, 0x6e, 0x63, 0xb6, 0x68, 0x62, 0xb7, 0xf2, 0x06, 0xfe, 0x4c, 0x03, 0x78, 0xda, 0xf3, 0x92,
+	0x5d, 0x63, 0x06, 0x32, 0x7d, 0x2a, 0x58, 0xb8, 0x05, 0x6f, 0x30, 0x9f, 0x20, 0x86, 0x4b, 0x7c,
+	0x9f, 0xa0, 0x0d, 0x74, 0x09, 0x72, 0x5d, 0x87, 0xf4, 0x1b, 0xc7, 0x7d, 0x06, 0x32, 0xa1, 0x67,
+	0x69, 0x73, 0xb3, 0x8f, 0xae, 0x43, 0xd1, 0x3c, 0xb4, 0x6c, 0x87, 0x34, 0xb8, 0xac, 0x0c, 0xeb,
+	0x2d, 0x70, 0x1a, 0xd3, 0x5b, 0x61, 0xe1, 0x82, 0xb3, 0x2a, 0xcb, 0x16, 0x25, 0x61, 0x0b, 0x0a,
+	0x4c, 0xd5, 0x91, 0xcc, 0x77, 0x37, 0xd0, 0x31, 0xc5, 0x86, 0x0d, 0x9a, 0x50, 0x68, 0x8d, 0xdf,
+	0x03, 0xb4, 0x46, 0xda, 0xc4, 0x23, 0xa3, 0x44, 0x0f, 0xc5, 0x26, 0x69, 0xd5, 0x26, 0xf8, 0x17,
+	0x1a, 0x4c, 0x87, 0xc4, 0x8f, 0x34, 0xad, 0x2a, 0xe4, 0x5a, 0x4c, 0x18, 0xd7, 0x20, 0xad, 0xcb,
+	0x26, 0xba, 0x0f, 0x13, 0x42, 0x01, 0xb7, 0x9a, 0x4e, 0xd8, 0x34, 0x39, 0xae, 0x93, 0x8b, 0x3f,
+	0x4b, 0x41, 0x5e, 0x4c, 0x74, 0xa7, 0x8b, 0x56, 0xa0, 0xe4, 0xf0, 0x46, 0x83, 0xcd, 0x47, 0x68,
+	0x54, 0x4b, 0x0e, 0x42, 0xeb, 0x63, 0x7a, 0x51, 0x0c, 0x61, 0x64, 0xf4, 0x1d, 0x28, 0x48, 0x11,
+	0xdd, 0x9e, 0x27, 0x4c, 0x5e, 0x0d, 0x0b, 0x08, 0xf6, 0xdf, 0xfa, 0x98, 0x0e, 0x82, 0xfd, 0x69,
+	0xcf, 0x43, 0x7b, 0x30, 0x23, 0x07, 0xf3, 0xd9, 0x08, 0x35, 0xd2, 0x4c, 0xca, 0x7c, 0x58, 0xca,
+	0xe0, 0x52, 0xad, 0x8f, 0xe9, 0x48, 0x8c, 0x57, 0x3a, 0x55, 0x95, 0xbc, 0x13, 0x1e, 0xbc, 0x07,
+	0x54, 0xda, 0x3b, 0xb1, 0x06, 0x55, 0xda, 0x3b, 0xb1, 0x1e, 0xe5, 0x21, 0x27, 0x5a, 0xf8, 0xcf,
+	0x29, 0x00, 0xb9, 0x1a, 0x3b, 0x5d, 0xb4, 0x06, 0x65, 0x47, 0xb4, 0x42, 0xd6, 0xba, 0x1c, 0x6b,
+	0x2d, 0xb1, 0x88, 0x63, 0x7a, 0x49, 0x0e, 0xe2, 0xca, 0xbd, 0x01, 0x45, 0x5f, 0x4a, 0x60, 0xb0,
+	0xd9, 0x18, 0x83, 0xf9, 0x12, 0x0a, 0x72, 0x00, 0x35, 0xd9, 0x3b, 0x70, 0xc1, 0x1f, 0x1f, 0x63,
+	0xb3, 0xeb, 0x43, 0x6c, 0xe6, 0x0b, 0x9c, 0x96, 0x12, 0x54, 0xab, 0xa9, 0x8a, 0x05, 0x66, 0x9b,
+	0x8d, 0x31, 0xdb, 0xa0, 0x62, 0xd4, 0x70, 0x40, 0xf3, 0x25, 0x6f, 0xe2, 0xbf, 0xa4, 0x21, 0xb7,
+	0x6a, 0x77, 0xba, 0x86, 0x43, 0x57, 0x23, 0xeb, 0x10, 0xb7, 0xd7, 0xf6, 0x98, 0xb9, 0xca, 0xcb,
+	0x37, 0xc2, 0x12, 0x05, 0x9b, 0xfc, 0xab, 0x33, 0x56, 0x5d, 0x0c, 0xa1, 0x83, 0x45, 0x7a, 0x4c,
+	0x9d, 0x63, 0xb0, 0x48, 0x8e, 0x62, 0x88, 0x74, 0xe4, 0x74, 0xe0, 0xc8, 0x35, 0xc8, 0xf5, 0x89,
+	0x13, 0xa4, 0xf4, 0xf5, 0x31, 0x5d, 0x12, 0xd0, 0x5d, 0x98, 0x8c, 0xa6, 0x97, 0x8c, 0xe0, 0x29,
+	0x37, 0xc3, 0xd9, 0xe8, 0x06, 0x14, 0x43, 0x39, 0x2e, 0x2b, 0xf8, 0x0a, 0x1d, 0x25, 0xc5, 0x5d,
+	0x94, 0x71, 0x95, 0xe6, 0xe3, 0xe2, 0xfa, 0x98, 0x8c, 0xac, 0xa1, 0x60, 0x32, 0x11, 0x0e, 0x26,
+	0xf8, 0xbb, 0x50, 0x0a, 0x19, 0x82, 0xe6, 0x97, 0xfa, 0xdb, 0xcf, 0x56, 0xb6, 0x78, 0x32, 0x7a,
+	0xcc, 0xf2, 0x8f, 0x5e, 0xd1, 0x68, 0x4e, 0xdb, 0xaa, 0xef, 0xee, 0x56, 0x52, 0xa8, 0x04, 0xf9,
+	0xed, 0x9d, 0xbd, 0x06, 0xe7, 0x4a, 0xe3, 0xd7, 0x7d, 0x09, 0x22, 0x99, 0x29, 0x39, 0x6c, 0x4c,
+	0xc9, 0x61, 0x9a, 0xcc, 0x61, 0xa9, 0x20, 0x87, 0xa5, 0x1f, 0x95, 0xa1, 0xc8, 0x8d, 0xd7, 0xe8,
+	0x59, 0x34, 0x8f, 0xfe, 0x4e, 0x03, 0x08, 0x5c, 0x05, 0x2d, 0x41, 0xae, 0xc9, 0x85, 0x57, 0x35,
+	0x16, 0x69, 0x2e, 0xc4, 0xae, 0x87, 0x2e, 0xb9, 0xd0, 0x2b, 0x90, 0x73, 0x7b, 0xcd, 0x26, 0x71,
+	0x65, 0x3e, 0xbb, 0x14, 0x0d, 0x76, 0x22, 0x14, 0xe9, 0x92, 0x8f, 0x0e, 0x79, 0x6e, 0x98, 0xed,
+	0x1e, 0xcb, 0x6e, 0xc3, 0x87, 0x08, 0x3e, 0xfc, 0x6b, 0x0d, 0x0a, 0xca, 0xce, 0xfc, 0x92, 0x11,
+	0xf6, 0x0a, 0xe4, 0x99, 0x0e, 0xa4, 0x25, 0x62, 0xec, 0x84, 0x1e, 0x10, 0xd0, 0xb7, 0x21, 0x2f,
+	0xb7, 0xb7, 0x0c, 0xb3, 0xd5, 0x78, 0xb1, 0x3b, 0x5d, 0x3d, 0x60, 0xc5, 0x9b, 0x30, 0xc5, 0xac,
+	0xd2, 0xa4, 0x27, 0x67, 0x69, 0x47, 0xf5, 0x6c, 0xa9, 0x45, 0xce, 0x96, 0x35, 0x98, 0xe8, 0x1e,
+	0x9d, 0xba, 0x66, 0xd3, 0x68, 0x0b, 0x2d, 0xfc, 0x36, 0x7e, 0x0b, 0x90, 0x2a, 0x6c, 0x94, 0xe9,
+	0xe2, 0x12, 0x14, 0xd6, 0x0d, 0xf7, 0x48, 0xa8, 0x84, 0xef, 0x43, 0x89, 0x36, 0x37, 0xf7, 0xcf,
+	0xa1, 0x23, 0x3b, 0xf9, 0x4b, 0xee, 0x91, 0x6c, 0x8e, 0x60, 0xfc, 0xc8, 0x70, 0x8f, 0xd8, 0x44,
+	0x4b, 0x3a, 0xfb, 0x46, 0x77, 0xa1, 0xd2, 0xe4, 0x93, 0x6c, 0x44, 0xee, 0x03, 0x93, 0x82, 0xee,
+	0x1f, 0xf3, 0xde, 0x85, 0x22, 0x9f, 0xc3, 0x57, 0xad, 0x04, 0x9e, 0x82, 0xc9, 0x5d, 0xcb, 0xe8,
+	0xba, 0x47, 0xb6, 0x4c, 0x5d, 0x74, 0xd2, 0x95, 0x80, 0x36, 0x12, 0xe2, 0x1d, 0x98, 0x74, 0x48,
+	0xc7, 0x30, 0x2d, 0xd3, 0x3a, 0x6c, 0x1c, 0x9c, 0x7a, 0xc4, 0x15, 0xb7, 0xa1, 0xb2, 0x4f, 0x7e,
+	0x44, 0xa9, 0x54, 0xb5, 0x83, 0xb6, 0x7d, 0x20, 0x62, 0x18, 0xfb, 0xc6, 0x7f, 0xd2, 0xa0, 0xf8,
+	0x8e, 0xe1, 0x35, 0xe5, 0xd2, 0xa1, 0x0d, 0x28, 0xfb, 0x91, 0x8b, 0x51, 0x84, 0x2e, 0x91, 0xfc,
+	0xc9, 0xc6, 0xc8, 0x73, 0xb2, 0x4c, 0x7d, 0xa5, 0xa6, 0x4a, 0x60, 0xa2, 0x0c, 0xab, 0x49, 0xda,
+	0xbe, 0xa8, 0x54, 0xb2, 0x28, 0xc6, 0xa8, 0x8a, 0x52, 0x09, 0x8f, 0x26, 0x83, 0xb3, 0x05, 0x8f,
+	0x25, 0xbf, 0x49, 0x01, 0x1a, 0xd4, 0xe1, 0x8b, 0x1e, 0xb7, 0x6e, 0x41, 0xd9, 0xf5, 0x0c, 0x67,
+	0x60, 0x6f, 0x94, 0x18, 0xd5, 0x8f, 0xbe, 0x77, 0x60, 0xb2, 0xeb, 0xd8, 0x87, 0x0e, 0x71, 0xdd,
+	0x86, 0x65, 0x7b, 0xe6, 0xf3, 0x53, 0x71, 0x62, 0x2d, 0x4b, 0xf2, 0x36, 0xa3, 0xa2, 0x3a, 0xe4,
+	0x9e, 0x9b, 0x6d, 0x8f, 0x38, 0x6e, 0x35, 0x33, 0x9f, 0x5e, 0x28, 0x2f, 0xdf, 0x3f, 0xcb, 0x6a,
+	0x8b, 0x6f, 0x32, 0xfe, 0xbd, 0xd3, 0x2e, 0xd1, 0xe5, 0x58, 0xf5, 0x14, 0x98, 0x0d, 0x9d, 0x02,
+	0x6f, 0x01, 0x04, 0xfc, 0x34, 0xd4, 0x6e, 0xef, 0x3c, 0x7d, 0xb6, 0x57, 0x19, 0x43, 0x45, 0x98,
+	0xd8, 0xde, 0x59, 0xab, 0x6f, 0xd5, 0x69, 0x30, 0xc6, 0x4b, 0xd2, 0x36, 0xaa, 0x0d, 0xd1, 0x2c,
+	0x4c, 0xbc, 0xa0, 0x54, 0x79, 0x99, 0x4e, 0xeb, 0x39, 0xd6, 0xde, 0x68, 0xe1, 0x9f, 0xa7, 0xa0,
+	0x24, 0x76, 0xc1, 0x48, 0x5b, 0x51, 0x85, 0x48, 0x85, 0x20, 0xe8, 0x91, 0x93, 0xef, 0x8e, 0x96,
+	0x38, 0xd9, 0xca, 0x26, 0x8d, 0x0d, 0x7c, 0xb1, 0x49, 0x4b, 0x98, 0xd5, 0x6f, 0xc7, 0xba, 0x6f,
+	0x26, 0xd6, 0x7d, 0xd1, 0x0d, 0x28, 0xf9, 0xbb, 0xcd, 0x70, 0x45, 0x22, 0xcd, 0xeb, 0x45, 0xb9,
+	0x91, 0x28, 0x0d, 0xdd, 0x82, 0x2c, 0xe9, 0x13, 0xcb, 0x73, 0xab, 0x05, 0x16, 0x75, 0x4b, 0xf2,
+	0x70, 0x5b, 0xa7, 0x54, 0x5d, 0x74, 0xe2, 0x6f, 0xc1, 0x14, 0xbb, 0x44, 0x3c, 0x76, 0x0c, 0x4b,
+	0xbd, 0xed, 0xec, 0xed, 0x6d, 0x09, 0xd3, 0xd1, 0x4f, 0x54, 0x86, 0xd4, 0xc6, 0x9a, 0x98, 0x68,
+	0x6a, 0x63, 0x0d, 0x7f, 0xa4, 0x01, 0x52, 0xc7, 0x8d, 0x64, 0xcb, 0x88, 0x70, 0x09, 0x9f, 0x0e,
+	0xe0, 0x67, 0x20, 0x43, 0x1c, 0xc7, 0x76, 0x98, 0xd5, 0xf2, 0x3a, 0x6f, 0xe0, 0x9b, 0x42, 0x07,
+	0x9d, 0xf4, 0xed, 0x63, 0xdf, 0x31, 0xb8, 0x34, 0xcd, 0x57, 0x75, 0x13, 0xa6, 0x43, 0x5c, 0x23,
+	0x45, 0xff, 0x3b, 0x70, 0x81, 0x09, 0xdb, 0x24, 0xa4, 0xbb, 0xd2, 0x36, 0xfb, 0x89, 0xa8, 0x5d,
+	0xb8, 0x18, 0x65, 0xfc, 0x7a, 0x6d, 0x84, 0x5f, 0x17, 0x88, 0x7b, 0x66, 0x87, 0xec, 0xd9, 0x5b,
+	0xc9, 0xba, 0xd1, 0xe8, 0x78, 0x4c, 0x4e, 0x5d, 0x91, 0x26, 0xd9, 0x37, 0xfe, 0xbd, 0x06, 0x97,
+	0x06, 0x86, 0x7f, 0xcd, 0xab, 0x3a, 0x07, 0x70, 0x48, 0xb7, 0x0f, 0x69, 0xd1, 0x0e, 0x7e, 0xfd,
+	0x56, 0x28, 0xbe, 0x9e, 0x34, 0xc0, 0x14, 0x85, 0x9e, 0x47, 0x90, 0x7d, 0xc2, 0x2a, 0x5f, 0xca,
+	0xac, 0xc6, 0xe5, 0xac, 0x2c, 0xa3, 0xc3, 0xef, 0xe3, 0x79, 0x9d, 0x7d, 0xb3, 0x43, 0x01, 0x21,
+	0xce, 0x33, 0x7d, 0x8b, 0x1f, 0x3e, 0xf2, 0xba, 0xdf, 0xa6, 0xe8, 0xcd, 0xb6, 0x49, 0x2c, 0x8f,
+	0xf5, 0x8e, 0xb3, 0x5e, 0x85, 0x82, 0x17, 0xa1, 0xc2, 0x91, 0x56, 0x5a, 0x2d, 0x25, 0xb9, 0xfb,
+	0xf2, 0xb4, 0xb0, 0x3c, 0xfc, 0x07, 0x0d, 0xa6, 0x94, 0x01, 0x23, 0xd9, 0xee, 0x25, 0xc8, 0xf2,
+	0xfa, 0x9e, 0xc8, 0x23, 0x33, 0xe1, 0x51, 0x1c, 0x46, 0x17, 0x3c, 0x68, 0x11, 0x72, 0xfc, 0x4b,
+	0x9e, 0xb0, 0xe2, 0xd9, 0x25, 0x13, 0xbe, 0x05, 0xd3, 0x82, 0x44, 0x3a, 0x76, 0xdc, 0x36, 0x61,
+	0x06, 0xc5, 0x1f, 0xc2, 0x4c, 0x98, 0x6d, 0xa4, 0x29, 0x29, 0x4a, 0xa6, 0xce, 0xa3, 0xe4, 0x8a,
+	0x54, 0xf2, 0x59, 0xb7, 0xa5, 0xa4, 0xbd, 0xe8, 0xaa, 0xab, 0x2b, 0x92, 0x8a, 0xac, 0x88, 0x3f,
+	0x01, 0x29, 0xe2, 0x1b, 0x9d, 0xc0, 0xb4, 0xdc, 0x0e, 0x5b, 0xa6, 0xeb, 0x1f, 0x86, 0x3e, 0x00,
+	0xa4, 0x12, 0xbf, 0x69, 0x85, 0xd6, 0xc8, 0x73, 0xc7, 0x38, 0xec, 0x10, 0x3f, 0xd4, 0xd3, 0xa3,
+	0xb1, 0x4a, 0x1c, 0x29, 0x38, 0x2e, 0xc1, 0xd4, 0x13, 0xbb, 0x4f, 0xb6, 0x38, 0x35, 0x70, 0x19,
+	0x7e, 0x35, 0xf2, 0x97, 0xcd, 0x6f, 0x53, 0x70, 0x75, 0xc0, 0x48, 0xe0, 0x7f, 0xd7, 0xa0, 0xb8,
+	0xd2, 0x36, 0x9c, 0x8e, 0x04, 0x7e, 0x03, 0xb2, 0xfc, 0xc0, 0x2f, 0x2e, 0xd0, 0xb7, 0xc3, 0x62,
+	0x54, 0x5e, 0xde, 0x58, 0xe1, 0xd7, 0x03, 0x31, 0x8a, 0x2a, 0x2e, 0x6a, 0xec, 0x6b, 0x91, 0x9a,
+	0xfb, 0x1a, 0x7a, 0x00, 0x19, 0x83, 0x0e, 0x61, 0xd1, 0xac, 0x1c, 0xbd, 0x6a, 0x31, 0x69, 0xec,
+	0x9c, 0xc3, 0xb9, 0xf0, 0x6b, 0x50, 0x50, 0x10, 0xe8, 0x0d, 0xf2, 0x71, 0x5d, 0x9c, 0x65, 0x56,
+	0x56, 0xf7, 0x36, 0xf6, 0xf9, 0xc5, 0xb2, 0x0c, 0xb0, 0x56, 0xf7, 0xdb, 0x29, 0xfc, 0xae, 0x18,
+	0x25, 0xe2, 0x9d, 0xaa, 0x8f, 0x96, 0xa4, 0x4f, 0xea, 0x5c, 0xfa, 0x9c, 0x40, 0x49, 0x4c, 0x7f,
+	0xa4, 0x0d, 0xf8, 0x0a, 0x64, 0x99, 0x3c, 0xb9, 0xff, 0x66, 0x63, 0x60, 0x65, 0xa8, 0xe2, 0x8c,
+	0x78, 0x12, 0x4a, 0xbb, 0x9e, 0xe1, 0xf5, 0x5c, 0xb9, 0xff, 0xfe, 0xa6, 0x41, 0x59, 0x52, 0x46,
+	0x2d, 0xf4, 0xc9, 0x1a, 0x05, 0xcf, 0x00, 0x7e, 0x85, 0xe2, 0x22, 0x64, 0x5b, 0x07, 0xbb, 0xe6,
+	0x07, 0xb2, 0x28, 0x2b, 0x5a, 0x94, 0xde, 0xe6, 0x38, 0xfc, 0x65, 0x44, 0xb4, 0xe8, 0x85, 0xd6,
+	0x31, 0x9e, 0x7b, 0x1b, 0x56, 0x8b, 0x9c, 0xb0, 0x23, 0xd8, 0xb8, 0x1e, 0x10, 0xd8, 0xfd, 0x4e,
+	0xbc, 0xa0, 0xb0, 0x73, 0x97, 0xfa, 0xa2, 0x32, 0x0d, 0x53, 0x2b, 0x3d, 0xef, 0xa8, 0x6e, 0x19,
+	0x07, 0x6d, 0x19, 0xb1, 0xf0, 0x0c, 0x20, 0x4a, 0x5c, 0x33, 0x5d, 0x95, 0x5a, 0x87, 0x69, 0x4a,
+	0x25, 0x96, 0x67, 0x36, 0x95, 0xf0, 0x26, 0x93, 0x98, 0x16, 0x49, 0x62, 0x86, 0xeb, 0xbe, 0xb0,
+	0x9d, 0x96, 0x98, 0x9a, 0xdf, 0xc6, 0x6b, 0x5c, 0xf8, 0x33, 0x37, 0x94, 0xa6, 0xbe, 0xa8, 0x94,
+	0x85, 0x40, 0xca, 0x63, 0xe2, 0x0d, 0x91, 0x82, 0xef, 0xc3, 0x05, 0xc9, 0x29, 0x8a, 0x60, 0x43,
+	0x98, 0x77, 0xe0, 0xaa, 0x64, 0x5e, 0x3d, 0xa2, 0x17, 0x91, 0xa7, 0x02, 0xf0, 0xcb, 0xea, 0xf9,
+	0x08, 0xaa, 0xbe, 0x9e, 0xec, 0xdc, 0x69, 0xb7, 0x55, 0x05, 0x7a, 0xae, 0xd8, 0x33, 0x79, 0x9d,
+	0x7d, 0x53, 0x9a, 0x63, 0xb7, 0xfd, 0x23, 0x01, 0xfd, 0xc6, 0xab, 0x30, 0x2b, 0x65, 0x88, 0x13,
+	0x61, 0x58, 0xc8, 0x80, 0x42, 0x71, 0x42, 0x84, 0xc1, 0xe8, 0xd0, 0xe1, 0x66, 0x57, 0x39, 0xc3,
+	0xa6, 0x65, 0x32, 0x35, 0x45, 0xe6, 0x05, 0xbe, 0x23, 0xa8, 0x62, 0x6a, 0xc6, 0x10, 0x64, 0x2a,
+	0x40, 0x25, 0x8b, 0x85, 0xa0, 0xe4, 0x81, 0x85, 0x18, 0x10, 0xfd, 0x1e, 0xcc, 0xf9, 0x4a, 0x50,
+	0xbb, 0x3d, 0x25, 0x4e, 0xc7, 0x74, 0x5d, 0xa5, 0xb2, 0x12, 0x37, 0xf1, 0xdb, 0x30, 0xde, 0x25,
+	0x22, 0xa6, 0x14, 0x96, 0xd1, 0x22, 0x7f, 0xe7, 0x5c, 0x54, 0x06, 0xb3, 0x7e, 0xdc, 0x82, 0x6b,
+	0x52, 0x3a, 0xb7, 0x68, 0xac, 0xf8, 0xa8, 0x52, 0xf2, 0x02, 0xcb, 0xcd, 0x3a, 0x78, 0x81, 0x4d,
+	0xf3, 0xb5, 0xf7, 0x4b, 0x7c, 0x6f, 0x71, 0x43, 0x4a, 0xdf, 0x1a, 0x29, 0x57, 0x6c, 0x72, 0x9b,
+	0xfa, 0x2e, 0x39, 0x92, 0xb0, 0x03, 0x98, 0x09, 0x7b, 0xf2, 0x48, 0x61, 0x6c, 0x06, 0x32, 0x9e,
+	0x7d, 0x4c, 0x64, 0x10, 0xe3, 0x0d, 0xa9, 0xb0, 0xef, 0xe6, 0x23, 0x29, 0x6c, 0x04, 0xc2, 0xd8,
+	0x96, 0x1c, 0x55, 0x5f, 0xba, 0x9a, 0xf2, 0xf0, 0xc5, 0x1b, 0x78, 0x1b, 0x2e, 0x46, 0xc3, 0xc4,
+	0x48, 0x2a, 0xef, 0xf3, 0x0d, 0x1c, 0x17, 0x49, 0x46, 0x92, 0xfb, 0x76, 0x10, 0x0c, 0x94, 0x80,
+	0x32, 0x92, 0x48, 0x1d, 0x6a, 0x71, 0xf1, 0xe5, 0xab, 0xd8, 0xaf, 0x7e, 0xb8, 0x19, 0x49, 0x98,
+	0x1b, 0x08, 0x1b, 0x7d, 0xf9, 0x83, 0x18, 0x91, 0x1e, 0x1a, 0x23, 0x84, 0x93, 0x04, 0x51, 0xec,
+	0x6b, 0xd8, 0x74, 0x02, 0x23, 0x08, 0xa0, 0xa3, 0x62, 0xd0, 0x1c, 0xe2, 0x63, 0xb0, 0x86, 0xdc,
+	0xd8, 0x6a, 0xd8, 0x1d, 0x69, 0x31, 0xde, 0x09, 0x62, 0xe7, 0x40, 0x64, 0x1e, 0x49, 0xf0, 0xbb,
+	0x30, 0x9f, 0x1c, 0x94, 0x47, 0x91, 0x7c, 0x0f, 0x43, 0xde, 0x3f, 0x50, 0x2a, 0xbf, 0x11, 0x28,
+	0x40, 0x6e, 0x7b, 0x67, 0xf7, 0xe9, 0xca, 0x6a, 0xbd, 0xa2, 0x2d, 0xff, 0x37, 0x0d, 0xa9, 0xcd,
+	0x7d, 0xf4, 0x7d, 0xc8, 0xf0, 0x47, 0xb2, 0x21, 0x2f, 0xa3, 0xb5, 0x61, 0xef, 0x80, 0xf8, 0xca,
+	0x47, 0xff, 0xfc, 0xcf, 0xa7, 0xa9, 0x8b, 0x78, 0x6a, 0xa9, 0xff, 0xaa, 0xd1, 0xee, 0x1e, 0x19,
+	0x4b, 0xc7, 0xfd, 0x25, 0x96, 0x13, 0x1e, 0x6a, 0xf7, 0xd0, 0x3e, 0xa4, 0x9f, 0xf6, 0x3c, 0x94,
+	0xf8, 0x6c, 0x5a, 0x4b, 0x7e, 0x1f, 0xc4, 0x35, 0x26, 0x79, 0x06, 0x4f, 0xaa, 0x92, 0xbb, 0x3d,
+	0x8f, 0xca, 0xed, 0x43, 0x41, 0x7d, 0xe2, 0x3b, 0xf3, 0x41, 0xb5, 0x76, 0xf6, 0xf3, 0x21, 0xc6,
+	0x0c, 0xef, 0x0a, 0xbe, 0xa4, 0xe2, 0xf1, 0x97, 0x48, 0x75, 0x3e, 0x7b, 0x27, 0x16, 0x4a, 0x7c,
+	0x73, 0xad, 0x25, 0x3f, 0x2b, 0xc6, 0xcf, 0xc7, 0x3b, 0xb1, 0xa8, 0x5c, 0x5b, 0x3c, 0x2b, 0x36,
+	0x3d, 0x74, 0x2d, 0xe6, 0xe5, 0x49, 0x7d, 0x63, 0xa9, 0xcd, 0x27, 0x33, 0x08, 0xa4, 0xeb, 0x0c,
+	0xe9, 0x32, 0xbe, 0xa8, 0x22, 0x35, 0x7d, 0xbe, 0x87, 0xda, 0xbd, 0xe5, 0x23, 0xc8, 0xb0, 0x22,
+	0x2b, 0x6a, 0xc8, 0x8f, 0x5a, 0x4c, 0x79, 0x38, 0x61, 0x07, 0x84, 0xca, 0xb3, 0x78, 0x96, 0xa1,
+	0x4d, 0xe3, 0xb2, 0x8f, 0xc6, 0xea, 0xac, 0x0f, 0xb5, 0x7b, 0x0b, 0xda, 0xcb, 0xda, 0xf2, 0x8f,
+	0xc7, 0x21, 0xc3, 0xea, 0x56, 0xa8, 0x0b, 0x10, 0x54, 0x24, 0xa3, 0xf3, 0x1c, 0xa8, 0x71, 0x46,
+	0xe7, 0x39, 0x58, 0xcc, 0xc4, 0xd7, 0x18, 0xf2, 0x2c, 0x9e, 0xf1, 0x91, 0xd9, 0x2f, 0x30, 0x96,
+	0x58, 0x85, 0x8a, 0x9a, 0xf5, 0x05, 0x14, 0x94, 0xca, 0x22, 0x8a, 0x93, 0x18, 0x2a, 0x4d, 0x46,
+	0xb7, 0x49, 0x4c, 0x59, 0x12, 0xdf, 0x60, 0xa0, 0x57, 0x71, 0x55, 0x35, 0x2e, 0xc7, 0x75, 0x18,
+	0x27, 0x05, 0xfe, 0x58, 0x83, 0x72, 0xb8, 0xba, 0x88, 0x6e, 0xc4, 0x88, 0x8e, 0x16, 0x29, 0x6b,
+	0x37, 0x87, 0x33, 0x25, 0xaa, 0xc0, 0xf1, 0x8f, 0x09, 0xe9, 0x1a, 0x94, 0x53, 0xd8, 0x1e, 0xfd,
+	0x44, 0x83, 0xc9, 0x48, 0xcd, 0x10, 0xc5, 0x41, 0x0c, 0x54, 0x24, 0x6b, 0xb7, 0xce, 0xe0, 0x12,
+	0x9a, 0xdc, 0x61, 0x9a, 0x5c, 0xc7, 0x57, 0x06, 0x8d, 0xe1, 0x99, 0x1d, 0xe2, 0xd9, 0x42, 0x9b,
+	0xe5, 0xff, 0xa5, 0x21, 0xb7, 0xca, 0x7f, 0x2e, 0x87, 0x3c, 0xc8, 0xfb, 0x65, 0x38, 0x34, 0x17,
+	0x57, 0x12, 0x09, 0x8e, 0xec, 0xb5, 0x6b, 0x89, 0xfd, 0x42, 0x85, 0xdb, 0x4c, 0x85, 0x79, 0x7c,
+	0xd9, 0x57, 0x41, 0xfc, 0x2c, 0x6f, 0x89, 0x5f, 0xbe, 0x97, 0x8c, 0x56, 0x8b, 0x2e, 0xc9, 0x8f,
+	0x34, 0x28, 0xaa, 0xd5, 0x32, 0x74, 0x3d, 0xb6, 0x18, 0xa3, 0x16, 0xdc, 0x6a, 0x78, 0x18, 0x8b,
+	0xc0, 0xbf, 0xcb, 0xf0, 0x6f, 0xe0, 0xb9, 0x24, 0x7c, 0x87, 0xf1, 0x87, 0x55, 0xe0, 0xf5, 0xae,
+	0x78, 0x15, 0x42, 0xe5, 0xb4, 0x78, 0x15, 0xc2, 0xe5, 0xb2, 0xb3, 0x55, 0xe8, 0x31, 0x7e, 0xaa,
+	0xc2, 0x09, 0x40, 0x50, 0xde, 0x42, 0xb1, 0xc6, 0x55, 0x2e, 0x31, 0x51, 0x1f, 0x1c, 0xac, 0x8c,
+	0xc5, 0xec, 0x80, 0x08, 0x76, 0xdb, 0x74, 0xa9, 0x2f, 0x2e, 0xff, 0x31, 0x0b, 0x85, 0x27, 0x86,
+	0x69, 0x79, 0xc4, 0x32, 0xac, 0x26, 0x41, 0x87, 0x90, 0x61, 0x59, 0x2a, 0x1a, 0x78, 0xd4, 0xb2,
+	0x4f, 0x34, 0xf0, 0x84, 0x6a, 0x22, 0xf8, 0x16, 0x83, 0xbe, 0x86, 0x6b, 0x3e, 0x74, 0x27, 0x90,
+	0xbf, 0xc4, 0xea, 0x19, 0x74, 0xca, 0xc7, 0x90, 0xe5, 0xf5, 0x0b, 0x14, 0x91, 0x16, 0xaa, 0x73,
+	0xd4, 0xae, 0xc4, 0x77, 0x26, 0xee, 0x32, 0x15, 0xcb, 0x65, 0xcc, 0x14, 0xec, 0x07, 0x00, 0x41,
+	0xb5, 0x2e, 0x6a, 0xdf, 0x81, 0xe2, 0x5e, 0x6d, 0x3e, 0x99, 0x41, 0x00, 0xdf, 0x63, 0xc0, 0x37,
+	0xf1, 0xb5, 0x58, 0xe0, 0x96, 0x3f, 0x80, 0x82, 0x37, 0x61, 0x7c, 0xdd, 0x70, 0x8f, 0x50, 0x24,
+	0x09, 0x29, 0xaf, 0xe1, 0xb5, 0x5a, 0x5c, 0x97, 0x80, 0xba, 0xc9, 0xa0, 0xe6, 0xf0, 0x6c, 0x2c,
+	0xd4, 0x91, 0xe1, 0xd2, 0x98, 0x8e, 0x4c, 0xc8, 0xf2, 0x17, 0xf2, 0xa8, 0x39, 0x43, 0xaf, 0xec,
+	0x51, 0x73, 0x86, 0x1f, 0xd5, 0xcf, 0x09, 0xd5, 0x83, 0x09, 0xf9, 0x2e, 0x8d, 0xae, 0x46, 0x96,
+	0x27, 0xfc, 0x86, 0x5d, 0x9b, 0x4b, 0xea, 0x16, 0x80, 0x0b, 0x0c, 0x10, 0xe3, 0xab, 0xf1, 0xeb,
+	0x27, 0xd8, 0x1f, 0x6a, 0xf7, 0x5e, 0xd6, 0x68, 0xf0, 0x86, 0xa0, 0xea, 0x39, 0xe0, 0x24, 0xd1,
+	0x02, 0xea, 0x80, 0x93, 0x0c, 0x14, 0x4c, 0xf1, 0xab, 0x0c, 0xfd, 0x01, 0x5e, 0x88, 0x45, 0xf7,
+	0x1c, 0xc3, 0x72, 0x9f, 0x13, 0xe7, 0x01, 0x2f, 0x6f, 0xb9, 0x47, 0x66, 0x97, 0x3a, 0xcc, 0xcf,
+	0x2a, 0x30, 0x4e, 0x4f, 0x88, 0x34, 0x6f, 0x06, 0x17, 0xeb, 0xa8, 0x3a, 0x03, 0xe5, 0xac, 0xa8,
+	0x3a, 0x83, 0x77, 0xf2, 0x98, 0xbc, 0xc9, 0x7e, 0x26, 0x4d, 0x18, 0x17, 0x35, 0xbc, 0x07, 0x05,
+	0xe5, 0xfa, 0x8d, 0x62, 0x24, 0x86, 0x8b, 0x65, 0xd1, 0xbc, 0x19, 0x73, 0x77, 0xc7, 0xf3, 0x0c,
+	0xb4, 0x86, 0x2f, 0x84, 0x41, 0x5b, 0x9c, 0x8d, 0xa2, 0x7e, 0x08, 0x45, 0xf5, 0x9e, 0x8e, 0x62,
+	0x84, 0x46, 0xaa, 0x71, 0xd1, 0xe8, 0x18, 0x77, 0xcd, 0x8f, 0x09, 0x13, 0xfe, 0x8f, 0xc2, 0x25,
+	0x2f, 0x45, 0x7f, 0x1f, 0x72, 0xe2, 0xf6, 0x1e, 0x37, 0xdf, 0x70, 0xfd, 0x2e, 0x6e, 0xbe, 0x91,
+	0xab, 0x7f, 0xcc, 0x21, 0x8c, 0xc1, 0xd2, 0x5b, 0x8a, 0x4c, 0x49, 0x02, 0xf2, 0x31, 0xf1, 0x92,
+	0x20, 0x83, 0x8a, 0x54, 0x12, 0xa4, 0x72, 0x43, 0x1c, 0x0a, 0x79, 0x48, 0x3c, 0xe1, 0x52, 0xf2,
+	0xfa, 0x85, 0x12, 0x24, 0xaa, 0xf1, 0x1f, 0x0f, 0x63, 0x49, 0x3c, 0x37, 0x07, 0xa8, 0x22, 0xf8,
+	0xa3, 0x1f, 0x02, 0x04, 0xa5, 0x86, 0xe8, 0x51, 0x28, 0xb6, 0x5e, 0x19, 0x3d, 0x0a, 0xc5, 0x57,
+	0x2b, 0x62, 0x02, 0x49, 0x00, 0xce, 0xcf, 0xee, 0x14, 0xfe, 0x97, 0x1a, 0xa0, 0xc1, 0xd2, 0x04,
+	0xba, 0x1f, 0x0f, 0x11, 0x5b, 0x0a, 0xad, 0xbd, 0x74, 0x3e, 0xe6, 0xc4, 0x7c, 0x11, 0xe8, 0xd5,
+	0x64, 0x43, 0xba, 0x2f, 0xa8, 0x66, 0x9f, 0x68, 0x50, 0x0a, 0x15, 0x37, 0xd0, 0xed, 0x84, 0x75,
+	0x8e, 0x94, 0x53, 0x6b, 0x77, 0xce, 0xe4, 0x4b, 0x3c, 0x2d, 0x2a, 0xbb, 0x42, 0x9e, 0x94, 0x7f,
+	0xaa, 0x41, 0x39, 0x5c, 0x11, 0x41, 0x09, 0x00, 0x03, 0x35, 0xd9, 0xda, 0xc2, 0xd9, 0x8c, 0xe7,
+	0x58, 0xad, 0xe0, 0xf0, 0xfc, 0x3e, 0xe4, 0x44, 0x21, 0x25, 0xce, 0x2d, 0xc2, 0x25, 0xdd, 0x38,
+	0xb7, 0x88, 0x54, 0x61, 0x92, 0xdc, 0xc2, 0xb1, 0xdb, 0x44, 0xf1, 0x44, 0x51, 0x6e, 0x49, 0x82,
+	0x1c, 0xee, 0x89, 0x91, 0x5a, 0xcd, 0x50, 0xc8, 0xc0, 0x13, 0x65, 0xb1, 0x05, 0x25, 0x48, 0x3c,
+	0xc3, 0x13, 0xa3, 0xb5, 0x9a, 0x24, 0x4f, 0x64, 0xa8, 0x8a, 0x27, 0x06, 0xb5, 0x91, 0x38, 0x4f,
+	0x1c, 0x28, 0x58, 0xc7, 0x79, 0xe2, 0x60, 0x79, 0x25, 0x69, 0x6d, 0x19, 0x78, 0xc8, 0x13, 0xa7,
+	0x63, 0x6a, 0x29, 0xe8, 0xa5, 0x04, 0x9b, 0xc6, 0x16, 0xc3, 0x6b, 0x0f, 0xce, 0xc9, 0x3d, 0xdc,
+	0x03, 0xf8, 0x6a, 0x48, 0x0f, 0xf8, 0xad, 0x06, 0x33, 0x71, 0xc5, 0x18, 0x94, 0x00, 0x96, 0x50,
+	0x49, 0xaf, 0x2d, 0x9e, 0x97, 0xfd, 0x1c, 0x76, 0xf3, 0x7d, 0xe2, 0x51, 0xe5, 0xaf, 0x9f, 0xcf,
+	0x69, 0xff, 0xf8, 0x7c, 0x4e, 0xfb, 0xd7, 0xe7, 0x73, 0xda, 0xaf, 0xfe, 0x3d, 0x37, 0x76, 0x90,
+	0x65, 0xff, 0x57, 0xe9, 0xd5, 0xff, 0x07, 0x00, 0x00, 0xff, 0xff, 0x1d, 0x79, 0x2f, 0xad, 0x32,
+	0x35, 0x00, 0x00,
 }
diff --git a/etcdserver/etcdserverpb/rpc.proto b/etcdserver/etcdserverpb/rpc.proto
index 37916c0..bda48e0 100644
--- a/etcdserver/etcdserverpb/rpc.proto
+++ b/etcdserver/etcdserverpb/rpc.proto
@@ -174,7 +174,7 @@ service Maintenance {
     };
   }
 
-  // Hash returns the hash of the local KV state for consistency checking purpose.
+  // Hash computes the hash of the KV's backend.
   // This is designed for testing; do not use this in production when there
   // are ongoing transactions.
   rpc Hash(HashRequest) returns (HashResponse) {
@@ -184,6 +184,14 @@ service Maintenance {
     };
   }
 
+  // HashKV computes the hash of all MVCC keys up to a given revision. 
+  rpc HashKV(HashKVRequest) returns (HashKVResponse) {
+      option (google.api.http) = {
+        post: "/v3alpha/maintenance/hash"
+        body: "*"
+    };
+  }
+
   // Snapshot sends a snapshot of the entire backend from a member over a stream to a client.
   rpc Snapshot(SnapshotRequest) returns (stream SnapshotResponse) {
       option (google.api.http) = {
@@ -581,9 +589,22 @@ message CompactionResponse {
 message HashRequest {
 }
 
+message HashKVRequest {
+  // revision is the key-value store revision for the hash operation.
+  int64 revision = 1;
+}
+
+message HashKVResponse {
+  ResponseHeader header = 1;
+  // hash is the hash value computed from the responding member's MVCC keys up to a given revision.
+  uint32 hash = 2;
+  // compact_revision is the compacted revision of key-value store when hash begins.
+  int64 compact_revision = 3;
+}
+
 message HashResponse {
   ResponseHeader header = 1;
-  // hash is the hash value computed from the responding member's key-value store.
+  // hash is the hash value computed from the responding member's KV's backend.
   uint32 hash = 2;
 }
 
