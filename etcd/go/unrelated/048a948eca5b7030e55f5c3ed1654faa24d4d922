commit 048a948eca5b7030e55f5c3ed1654faa24d4d922
Author: Jonathan Boulle <jonathanboulle@gmail.com>
Date:   Thu Jun 4 16:41:32 2015 -0700

    docs: readme/branch-management cleanup

diff --git a/Documentation/branch_management.md b/Documentation/branch_management.md
index 8aa173f..27ead8d 100644
--- a/Documentation/branch_management.md
+++ b/Documentation/branch_management.md
@@ -1,24 +1,24 @@
-## Branch Managemnt
+## Branch Management
 
 ### Guide
 
-- New development occurs on the master branch
+- New development occurs on the [master branch](https://github.com/coreos/etcd/tree/master)
 - Master branch should always have a green build!
-- Backwards-compatible bug fixes should target the master branch and ported to stable
+- Backwards-compatible bug fixes should target the master branch and subsequently be ported to stable branches
 - Once the master branch is ready for release, it will be tagged and become the new stable branch.
 
-The etcd team adopts a rolling release model and support one stable version of etcd going forward.
+The etcd team has adopted a _rolling release model_ and supports one stable version of etcd.
 
 ### Master branch
 
-The master branch is our development branch. It is where all the new features go into first.
+The `master` branch is our development branch. All new features land here first.
 
-If you want to try new features, pull the master branch and play on it. But the branch is not really stable because new features may introduce bugs.
+If you want to try new features, pull `master` and play with it. Note that `master` may not be stable because new features may introduce bugs.
 
 Before the release of the next stable version, feature PRs will be frozen. We will focus on the testing, bug-fix and documentation for one to two weeks.
 
 ### Stable branches
 
-All branches with prefix 'release-' are stable branches.
+All branches with prefix `release-` are considered _stable_ branches.
 
-After a Minor release (http://semver.org/), we will have a new stable branch for that release. We will keep fixing the backwards-compatible bugs for the latest stable release, but not the olders. The bug fixes Patch release will be once every two weeks, given any patches.
+After every minor release (http://semver.org/), we will have a new stable branch for that release. We will keep fixing the backwards-compatible bugs for the latest stable release, but not previous releases. The _patch_ release, incorporating any bug fixes, will be once every two weeks, given any patches.
diff --git a/README.md b/README.md
index da1f6fa..402aa75 100644
--- a/README.md
+++ b/README.md
@@ -5,7 +5,7 @@
 
 ![etcd Logo](logos/etcd-horizontal-color.png)
 
-etcd is a distributed, consistent key value store for shared configuration and service discovery with a focus on being:
+etcd is a distributed, consistent key-value store for shared configuration and service discovery, with a focus on being:
 
 * *Simple*: curl'able user facing API (HTTP+JSON)
 * *Secure*: optional SSL client cert authentication
@@ -17,8 +17,6 @@ etcd is written in Go and uses the [Raft][raft] consensus algorithm to manage a
 See [etcdctl][etcdctl] for a simple command line client.
 Or feel free to just use curl, as in the examples below.
 
-[zookeeper]: http://zookeeper.apache.org/
-[doozer]: https://github.com/ha/doozerd
 [raft]: http://raftconsensus.github.io/
 [etcdctl]: https://github.com/coreos/etcd/tree/master/etcdctl
 
@@ -28,13 +26,14 @@ If you're considering etcd for production use, please see: [production-ready.md]
 
 ### Getting etcd
 
-The latest release and setup instructions are available at [GitHub][github-release].
+The easiest way to get etcd is to install one of the pre-built binaries from the tagged releases: instructions are available on [GitHub][github-release].
 
-You can build a latest etcd from master branch. All development occurs on the master branch which includes new features and bug fixes.
-
-Bug fixes should target the master branch and ported to the appropriate release branch as described in the [branch management](./Documentation/branch_management.md) guide.
+For those wanting to try the very latest version, you can build the latest version of etcd from the `master` branch.
+All development occurs on `master`, including new features and bug fixes.
+Bug fixes are first targeted at `master` and subsequently ported to release branches, as described in the [branch management][branch-management] guide.
 
 [github-release]: https://github.com/coreos/etcd/releases/
+[branch-management]: ./Documentation/branch_management.md
 
 ### Running etcd
 
