commit a9157ce6d33931ef4b06c3538c52796d539a495b
Author: Xiang Li <xiang.li@coreos.com>
Date:   Mon Mar 30 16:55:13 2015 -0700

    build: do not build internal debugging tool
    
    We are still playing around with the dump-log tool.
    Stop building it publicly until we are happy with its
    ux and functionality.

diff --git a/Documentation/0_4_migration_tool.md b/Documentation/0_4_migration_tool.md
deleted file mode 100644
index 7ddbb1d..0000000
--- a/Documentation/0_4_migration_tool.md
+++ /dev/null
@@ -1,47 +0,0 @@
-## etcd 0.4.x -> 2.0.0 Data Migration Tool
-
-### Upgrading from 0.4.x
-
-Between 0.4.x and 2.0, the on-disk data formats have changed. In order to allow users to convert to 2.0, a migration tool is provided.
-
-etcd will detect 0.4.x data dir and update the data automatically (while leaving a backup, in case of emergency).
-
-### Data Migration Tips
-
-* Keep the environment variables and etcd instance flags the same, particularly `--name`/`ETCD_NAME`.
-* Don't change the cluster configuration. If there's a plan to add or remove machines, it's probably best to arrange for that after the migration, rather than before or at the same time.
-
-### Running the tool
-
-The tool can be run via:
-```sh
-./bin/etcd-migrate --data-dir=<PATH TO YOUR DATA>
-```
-
-It should autodetect everything and convert the data-dir to be 2.0 compatible. It does not remove the 0.4.x data, and is safe to convert multiple times; the 2.0 data will be overwritten. Recovering the disk space once everything is settled is covered later in the document.
-
-If, however, it complains about autodetecting the name (which can happen, depending on how the cluster was configured), you need to supply the name of this particular node. This is equivalent to the `--name` flag (or `ETCD_NAME` variable) that etcd was run with, which can also be found by accessing the self api, eg:
-
-```sh
-curl -L http://127.0.0.1:4001/v2/stats/self
-```
-
-Where the `"name"` field is the name of the local machine.
-
-Then, run the migration tool with
-
-```sh
-./bin/etcd-migrate --data-dir=<PATH TO YOUR DATA> --name=<NAME>
-```
-
-And the tool should migrate successfully. If it still has an error at this time, it's a failure or bug in the tool and it's worth reporting a bug.
-
-### Recovering Disk Space
-
-If the conversion has completed, the entire cluster is running on something 2.0-based, and the disk space is important, the following command will clear 0.4.x data from the data-dir:
-
-```sh
-rm -ri snapshot conf log
-```
-
-It will ask before every deletion, but these are the 0.4.x files and will not affect the working 2.0 data.
diff --git a/build b/build
index adb38ac..6702923 100755
--- a/build
+++ b/build
@@ -14,5 +14,3 @@ eval $(go env)
 # Static compilation is useful when etcd is run in a container
 CGO_ENABLED=0 go build -a -installsuffix cgo -ldflags '-s' -o bin/etcd ${REPO_PATH}
 CGO_ENABLED=0 go build -a -installsuffix cgo -ldflags '-s' -o bin/etcdctl ${REPO_PATH}/etcdctl
-go build -o bin/etcd-migrate ${REPO_PATH}/tools/etcd-migrate
-go build -o bin/etcd-dump-logs ${REPO_PATH}/tools/etcd-dump-logs
diff --git a/tools/etcd-migrate/README.md b/tools/etcd-migrate/README.md
new file mode 100644
index 0000000..d05947f
--- /dev/null
+++ b/tools/etcd-migrate/README.md
@@ -0,0 +1,48 @@
+## etcd 0.4.x -> 2.0.0 Data Migration Tool
+
+### Upgrading from 0.4.x
+
+Between 0.4.x and 2.0, the on-disk data formats have changed. In order to allow users to convert to 2.0, a migration tool is provided.
+
+etcd will detect 0.4.x data dir and update the data automatically (while leaving a backup, in case of emergency).
+
+### Data Migration Tips
+
+* Keep the environment variables and etcd instance flags the same, particularly `--name`/`ETCD_NAME`.
+* Don't change the cluster configuration. If there's a plan to add or remove machines, it's probably best to arrange for that after the migration, rather than before or at the same time.
+
+### Running the tool
+
+The tool can be run via:
+```sh
+./go build
+./etcd-migrate --data-dir=<PATH TO YOUR DATA>
+```
+
+It should autodetect everything and convert the data-dir to be 2.0 compatible. It does not remove the 0.4.x data, and is safe to convert multiple times; the 2.0 data will be overwritten. Recovering the disk space once everything is settled is covered later in the document.
+
+If, however, it complains about autodetecting the name (which can happen, depending on how the cluster was configured), you need to supply the name of this particular node. This is equivalent to the `--name` flag (or `ETCD_NAME` variable) that etcd was run with, which can also be found by accessing the self api, eg:
+
+```sh
+curl -L http://127.0.0.1:4001/v2/stats/self
+```
+
+Where the `"name"` field is the name of the local machine.
+
+Then, run the migration tool with
+
+```sh
+./bin/etcd-migrate --data-dir=<PATH TO YOUR DATA> --name=<NAME>
+```
+
+And the tool should migrate successfully. If it still has an error at this time, it's a failure or bug in the tool and it's worth reporting a bug.
+
+### Recovering Disk Space
+
+If the conversion has completed, the entire cluster is running on something 2.0-based, and the disk space is important, the following command will clear 0.4.x data from the data-dir:
+
+```sh
+rm -ri snapshot conf log
+```
+
+It will ask before every deletion, but these are the 0.4.x files and will not affect the working 2.0 data.
\ No newline at end of file
