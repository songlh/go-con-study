commit e19b0442f8a7209d723e2a3972aae43a9a82221a
Author: Brian Waldon <bcwaldon@gmail.com>
Date:   Tue Sep 23 10:10:08 2014 -0700

    etcdserver: pass scheme into send

diff --git a/etcdserver/etcdhttp/peers.go b/etcdserver/etcdhttp/peers.go
index e95575d..488b61f 100644
--- a/etcdserver/etcdhttp/peers.go
+++ b/etcdserver/etcdhttp/peers.go
@@ -91,12 +91,12 @@ func Sender(t *http.Transport, p Peers) func(msgs []raftpb.Message) {
 		for _, m := range msgs {
 			// TODO: reuse go routines
 			// limit the number of outgoing connections for the same receiver
-			go send(c, p, m)
+			go send(c, "http", p, m)
 		}
 	}
 }
 
-func send(c *http.Client, p Peers, m raftpb.Message) {
+func send(c *http.Client, scheme string, p Peers, m raftpb.Message) {
 	// TODO (xiangli): reasonable retry logic
 	for i := 0; i < 3; i++ {
 		addr := p.Pick(m.To)
@@ -108,7 +108,7 @@ func send(c *http.Client, p Peers, m raftpb.Message) {
 			return
 		}
 
-		url := fmt.Sprintf("http://%s%s", addr, raftPrefix)
+		url := fmt.Sprintf("%s://%s%s", scheme, addr, raftPrefix)
 
 		// TODO: don't block. we should be able to have 1000s
 		// of messages out at a time.
diff --git a/etcdserver/etcdhttp/peers_test.go b/etcdserver/etcdhttp/peers_test.go
index 0ed78b7..0719e10 100644
--- a/etcdserver/etcdhttp/peers_test.go
+++ b/etcdserver/etcdhttp/peers_test.go
@@ -215,7 +215,7 @@ func TestSend(t *testing.T) {
 		ps := Peers{
 			42: []string{strings.TrimPrefix(ts.URL, "http://")},
 		}
-		send(http.DefaultClient, ps, tt.m)
+		send(http.DefaultClient, "http", ps, tt.m)
 
 		if !tt.ok {
 			if tr != nil {
